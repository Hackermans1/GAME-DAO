{"version":3,"file":"kg-default-nodes.js","sources":["../lib/KoenigDecoratorNode.js","../lib/utils/build-clean-basic-html-for-element.js","../lib/utils/read-caption-from-element.js","../lib/utils/read-image-attributes-from-element.js","../lib/nodes/image/ImageParser.js","../lib/utils/get-available-image-widths.js","../lib/utils/is-local-content-image.js","../lib/utils/is-unsplash-image.js","../lib/utils/srcset-attribute.js","../lib/utils/resize-image.js","../lib/utils/add-create-document-option.js","../lib/nodes/image/ImageRenderer.js","../lib/nodes/image/ImageNode.js","../lib/nodes/codeblock/CodeBlockParser.js","../lib/nodes/codeblock/CodeBlockRenderer.js","../lib/nodes/codeblock/CodeBlockNode.js","../lib/nodes/markdown/MarkdownRenderer.js","../lib/nodes/markdown/MarkdownNode.js","../lib/nodes/video/VideoParser.js","../lib/nodes/video/VideoRenderer.js","../lib/nodes/video/VideoNode.js","../lib/nodes/audio/AudioParser.js","../lib/nodes/audio/AudioRenderer.js","../lib/nodes/audio/AudioNode.js","../lib/nodes/callout/CalloutRenderer.js","../lib/nodes/callout/CalloutParser.js","../lib/nodes/callout/CalloutNode.js","../lib/nodes/aside/AsideParser.js","../lib/nodes/aside/AsideRenderer.js","../lib/nodes/aside/AsideNode.js","../lib/nodes/horizontalrule/HorizontalRuleRenderer.js","../lib/nodes/horizontalrule/HorizontalRuleParser.js","../lib/nodes/horizontalrule/HorizontalRuleNode.js","../lib/nodes/html/HtmlRenderer.js","../lib/nodes/html/HtmlParser.js","../lib/nodes/html/HtmlNode.js","../lib/nodes/toggle/ToggleParser.js","../lib/nodes/toggle/ToggleRenderer.js","../lib/nodes/toggle/ToggleNode.js","../lib/nodes/button/ButtonParser.js","../lib/nodes/button/ButtonRenderer.js","../lib/nodes/button/ButtonNode.js","../lib/nodes/bookmark/BookmarkParser.js","../lib/nodes/bookmark/BookmarkRenderer.js","../lib/nodes/bookmark/BookmarkNode.js","../lib/nodes/file/FileRenderer.js","../lib/nodes/file/FileParser.js","../lib/nodes/file/FileNode.js","../lib/nodes/paywall/PaywallParser.js","../lib/nodes/paywall/PaywallRenderer.js","../lib/nodes/paywall/PaywallNode.js","../lib/nodes/product/ProductParser.js","../lib/nodes/product/ProductRenderer.js","../lib/nodes/product/ProductNode.js","../lib/nodes/embed/EmbedParser.js","../lib/nodes/embed/EmbedRenderer.js","../lib/nodes/embed/EmbedNode.js","../lib/nodes/email/EmailRenderer.js","../lib/nodes/email/EmailNode.js","../lib/kg-default-nodes.js"],"sourcesContent":["import {DecoratorNode} from 'lexical';\n\nexport class KoenigDecoratorNode extends DecoratorNode {}\n\nexport function $isKoenigCard(node) {\n    return node instanceof KoenigDecoratorNode;\n}\n","import cleanBasicHtml from '@tryghost/kg-clean-basic-html';\n\nexport function buildCleanBasicHtmlForElement(domNode) {\n    return function _cleanBasicHtml(html) {\n        const cleanedHtml = cleanBasicHtml(html, {\n            createDocument: (_html) => {\n                const newDoc = domNode.ownerDocument.implementation.createHTMLDocument();\n                newDoc.body.innerHTML = _html;\n                return newDoc;\n            }\n        });\n        return cleanedHtml;\n    };\n}\n","import {buildCleanBasicHtmlForElement} from './build-clean-basic-html-for-element';\n\nexport function readCaptionFromElement(element, {selector = 'figcaption'} = {}) {\n    const cleanBasicHtml = buildCleanBasicHtmlForElement(element);\n\n    let caption;\n\n    const figcaptions = Array.from(element.querySelectorAll(selector));\n    if (figcaptions.length) {\n        figcaptions.forEach((figcaption) => {\n            const cleanHtml = cleanBasicHtml(figcaption.innerHTML);\n            caption = caption ? `${caption} / ${cleanHtml}` : cleanHtml;\n        });\n    }\n\n    return caption;\n}\n","export function readImageAttributesFromElement(element) {\n    const attrs = {};\n\n    if (element.src) {\n        attrs.src = element.src;\n    }\n\n    if (element.width) {\n        attrs.width = element.width;\n    } else if (element.dataset && element.dataset.width) {\n        attrs.width = parseInt(element.dataset.width, 10);\n    }\n\n    if (element.height) {\n        attrs.height = element.height;\n    } else if (element.dataset && element.dataset.height) {\n        attrs.height = parseInt(element.dataset.height, 10);\n    }\n\n    if ((!element.width && !element.height) && element.getAttribute('data-image-dimensions')) {\n        const [, width, height] = (/^(\\d*)x(\\d*)$/gi).exec(element.getAttribute('data-image-dimensions'));\n        attrs.width = parseInt(width, 10);\n        attrs.height = parseInt(height, 10);\n    }\n\n    if (element.alt) {\n        attrs.alt = element.alt;\n    }\n\n    if (element.title) {\n        attrs.title = element.title;\n    }\n\n    if (element.parentNode.tagName === 'A') {\n        const href = element.parentNode.href;\n\n        if (href !== attrs.src) {\n            attrs.href = href;\n        }\n    }\n\n    return attrs;\n}\n","import {readCaptionFromElement} from '../../utils/read-caption-from-element.js';\nimport {readImageAttributesFromElement} from '../../utils/read-image-attributes-from-element.js';\n\nexport class ImageParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            img: () => ({\n                conversion(domNode) {\n                    if (domNode.tagName === 'IMG') {\n                        const {src, width, height, alt: altText, title} = readImageAttributesFromElement(domNode);\n\n                        const node = new self.NodeClass({altText, src, title, width, height});\n                        return {node};\n                    }\n\n                    return null;\n                },\n                priority: 1\n            }),\n            figure: (nodeElem) => {\n                if (!nodeElem.querySelector('img')) {\n                    return null;\n                }\n                return {\n                    conversion(domNode) {\n                        const img = domNode.querySelector('img');\n                        const kgClass = domNode.className.match(/kg-width-(wide|full)/);\n                        const grafClass = domNode.className.match(/graf--layout(FillWidth|OutsetCenter)/);\n\n                        if (!img) {\n                            return null;\n                        }\n\n                        const payload = readImageAttributesFromElement(img);\n\n                        if (kgClass) {\n                            payload.cardWidth = kgClass[1];\n                        } else if (grafClass) {\n                            payload.cardWidth = grafClass[1] === 'FillWidth' ? 'full' : 'wide';\n                        }\n\n                        payload.caption = readCaptionFromElement(domNode);\n\n                        const {src, width, height, alt: altText, title, caption, cardWidth, href} = payload;\n                        const node = new self.NodeClass({altText, src, title, width, height, caption, cardWidth, href});\n                        return {node};\n                    },\n                    priority: 1\n                };\n            }\n        };\n    }\n}\n","export const getAvailableImageWidths = function (image, imageSizes) {\n    // get a sorted list of the available responsive widths\n    const imageWidths = Object.values(imageSizes)\n        .map(({width}) => width)\n        .sort((a, b) => a - b);\n\n    // select responsive widths that are usable based on the image width\n    const availableImageWidths = imageWidths\n        .filter(width => width <= image.width);\n\n    // add the original image size to the responsive list if it's not captured by largest responsive size\n    // - we can't know the width/height of the original `src` image because we don't know if it was resized\n    //   or not. Adding the original image to the responsive list ensures we're not showing smaller sized\n    //   images than we need to be\n    if (image.width > availableImageWidths[availableImageWidths.length - 1] && image.width < imageWidths[imageWidths.length - 1]) {\n        availableImageWidths.push(image.width);\n    }\n\n    return availableImageWidths;\n};\n","export const isLocalContentImage = function (url, siteUrl = '') {\n    const normalizedSiteUrl = siteUrl.replace(/\\/$/, '');\n    const imagePath = url.replace(normalizedSiteUrl, '');\n    return /^(\\/.*|__GHOST_URL__)\\/?content\\/images\\//.test(imagePath);\n};\n","export const isUnsplashImage = function (url) {\n    return /images\\.unsplash\\.com/.test(url);\n};\n","import {isLocalContentImage} from './is-local-content-image';\nimport {getAvailableImageWidths} from './get-available-image-widths';\nimport {isUnsplashImage} from './is-unsplash-image';\n\n// default content sizes: [600, 1000, 1600, 2400]\n\nexport const getSrcsetAttribute = function ({src, width, options}) {\n    if (!options.imageOptimization || options.imageOptimization.srcsets === false || !width || !options.imageOptimization.contentImageSizes) {\n        return;\n    }\n\n    if (isLocalContentImage(src, options.siteUrl) && options.canTransformImage && !options.canTransformImage(src)) {\n        return;\n    }\n\n    const srcsetWidths = getAvailableImageWidths({width}, options.imageOptimization.contentImageSizes);\n\n    // apply srcset if this is a relative image that matches Ghost's image url structure\n    if (isLocalContentImage(src, options.siteUrl)) {\n        const [, imagesPath, filename] = src.match(/(.*\\/content\\/images)\\/(.*)/);\n        const srcs = [];\n\n        srcsetWidths.forEach((srcsetWidth) => {\n            if (srcsetWidth === width) {\n                // use original image path if width matches exactly (avoids 302s from size->original)\n                srcs.push(`${src} ${srcsetWidth}w`);\n            } else if (srcsetWidth <= width) {\n                // avoid creating srcset sizes larger than intrinsic image width\n                srcs.push(`${imagesPath}/size/w${srcsetWidth}/${filename} ${srcsetWidth}w`);\n            }\n        });\n\n        if (srcs.length) {\n            return srcs.join(', ');\n        }\n    }\n\n    // apply srcset if this is an Unsplash image\n    if (isUnsplashImage(src)) {\n        const unsplashUrl = new URL(src);\n        const srcs = [];\n\n        srcsetWidths.forEach((srcsetWidth) => {\n            unsplashUrl.searchParams.set('w', srcsetWidth);\n            srcs.push(`${unsplashUrl.href} ${srcsetWidth}w`);\n        });\n\n        return srcs.join(', ');\n    }\n};\n\nexport const setSrcsetAttribute = function (elem, image, options) {\n    if (!elem || !['IMG', 'SOURCE'].includes(elem.tagName) || !elem.getAttribute('src') || !image) {\n        return;\n    }\n\n    const {src, width} = image;\n    const srcset = getSrcsetAttribute({src, width, options});\n\n    if (srcset) {\n        elem.setAttribute('srcset', srcset);\n    }\n};\n","export const resizeImage = function (image, {width: desiredWidth, height: desiredHeight} = {}) {\n    const {width, height} = image;\n    const ratio = width / height;\n\n    if (desiredWidth) {\n        const resizedHeight = Math.round(desiredWidth / ratio);\n\n        return {\n            width: desiredWidth,\n            height: resizedHeight\n        };\n    }\n\n    if (desiredHeight) {\n        const resizedWidth = Math.round(desiredHeight * ratio);\n\n        return {\n            width: resizedWidth,\n            height: desiredHeight\n        };\n    }\n};\n","// If we're in a browser environment, we can use the global document object,\n// but if we're in a non-browser environment, we need to be passed a `createDocument` function\nexport function addCreateDocumentOption(options) {\n    if (!options.createDocument) {\n        /* c8 ignore start */\n        let document = typeof window !== 'undefined' && window.document;\n\n        if (!document) {\n            throw new Error('renderImageNodeToDOM() must be passed a `createDocument` function as an option when used in a non-browser environment'); // eslint-disable-line\n        }\n\n        options.createDocument = function () {\n            return document;\n        };\n        /* c8 ignore end */\n    }\n}\n","import {getAvailableImageWidths} from '../../utils/get-available-image-widths';\nimport {isLocalContentImage} from '../../utils/is-local-content-image';\nimport {setSrcsetAttribute} from '../../utils/srcset-attribute';\nimport {resizeImage} from '../../utils/resize-image';\nimport {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nexport function renderImageNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n\n    if (!node.getSrc() || node.getSrc().trim() === '') {\n        return document.createTextNode('');\n    }\n\n    const figure = document.createElement('figure');\n\n    let figureClasses = 'kg-card kg-image-card';\n    if (node.getCardWidth() !== 'regular') {\n        figureClasses += ` kg-width-${node.getCardWidth()}`;\n    }\n\n    figure.setAttribute('class', figureClasses);\n\n    const img = document.createElement('img');\n    img.setAttribute('src', node.getSrc());\n    img.setAttribute('alt', node.getAltText());\n    img.setAttribute('loading', 'lazy');\n\n    if (node.getTitle()) {\n        img.setAttribute('title', node.getTitle());\n    }\n\n    if (node.getImgWidth() && node.getImgHeight()) {\n        img.setAttribute('width', node.getImgWidth());\n        img.setAttribute('height', node.getImgHeight());\n    }\n\n    // images can be resized to max width, if that's the case output\n    // the resized width/height attrs to ensure 3rd party gallery plugins\n    // aren't affected by differing sizes\n    const {canTransformImage} = options;\n    const {defaultMaxWidth} = options.imageOptimization || {};\n    if (\n        defaultMaxWidth &&\n            node.getImgWidth() > defaultMaxWidth &&\n            isLocalContentImage(node.getSrc(), options.siteUrl) &&\n            canTransformImage &&\n            canTransformImage(node.getSrc())\n    ) {\n        const imageDimensions = {\n            width: node.getImgWidth(),\n            height: node.getImgHeight()\n        };\n        const {width, height} = resizeImage(imageDimensions, {width: defaultMaxWidth});\n        img.setAttribute('width', width);\n        img.setAttribute('height', height);\n    }\n\n    if (options.target !== 'email') {\n        const imgAttributes = {\n            src: node.getSrc(),\n            width: node.getImgWidth(),\n            height: node.getImgHeight()\n        };\n        setSrcsetAttribute(img, imgAttributes, options);\n\n        if (img.getAttribute('srcset') && node.getImgWidth() && node.getImgWidth() >= 720) {\n            // standard size\n            if (!node.getCardWidth() || node.getCardWidth() === 'regular') {\n                img.setAttribute('sizes', '(min-width: 720px) 720px');\n            }\n\n            if (node.getCardWidth() === 'wide' && node.getImgWidth() >= 1200) {\n                img.setAttribute('sizes', '(min-width: 1200px) 1200px');\n            }\n        }\n    }\n\n    // Outlook is unable to properly resize images without a width/height\n    // so we add that at the expected size in emails (600px) and use a higher\n    // resolution image to keep images looking good on retina screens\n    if (options.target === 'email' && node.getImgWidth() && node.getImgHeight()) {\n        let imageDimensions = {\n            width: node.getImgWidth(),\n            height: node.getImgHeight()\n        };\n        if (node.getImgWidth() >= 600) {\n            imageDimensions = resizeImage(imageDimensions, {width: 600});\n        }\n        img.setAttribute('width', imageDimensions.width);\n        img.setAttribute('height', imageDimensions.height);\n\n        if (isLocalContentImage(node.getSrc(), options.siteUrl) && options.canTransformImage?.(node.getSrc())) {\n            // find available image size next up from 2x600 so we can use it for the \"retina\" src\n            const availableImageWidths = getAvailableImageWidths(node, options.imageOptimization.contentImageSizes);\n            const srcWidth = availableImageWidths.find(width => width >= 1200);\n\n            if (!srcWidth || srcWidth === node.getImgWidth()) {\n                // do nothing, width is smaller than retina or matches the original node src\n            } else {\n                const [, imagesPath, filename] = node.getSrc().match(/(.*\\/content\\/images)\\/(.*)/);\n                img.setAttribute('src', `${imagesPath}/size/w${srcWidth}/${filename}`);\n            }\n        }\n    }\n\n    if (node.getHref()) {\n        const a = document.createElement('a');\n        a.setAttribute('href', node.getHref());\n        a.appendChild(img);\n        figure.appendChild(a);\n    } else {\n        figure.appendChild(img);\n    }\n\n    if (node.getCaption()) {\n        const caption = document.createElement('figcaption');\n        caption.innerHTML = node.getCaption();\n        figure.appendChild(caption);\n    }\n\n    return figure;\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {ImageParser} from './ImageParser';\nimport {renderImageNodeToDOM} from './ImageRenderer';\n\nexport const INSERT_IMAGE_COMMAND = createCommand();\nexport const UPLOAD_IMAGE_COMMAND = createCommand();\n\nexport class ImageNode extends KoenigDecoratorNode {\n    // payload properties\n    __src;\n    __caption;\n    __title;\n    __altText;\n    __cardWidth;\n    __width;\n    __height;\n    __href;\n\n    static getType() {\n        return 'image';\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            src: 'url',\n            href: 'url',\n            caption: 'html'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            src: self.__src,\n            caption: self.__caption,\n            title: self.__title,\n            altText: self.__altText,\n            width: self.__width,\n            height: self.__height,\n            cardWidth: self.__cardWidth,\n            href: self.__href\n        };\n    }\n\n    constructor({src, caption, title, altText, cardWidth, width, height, href} = {}, key) {\n        super(key);\n        this.__src = src || '';\n        this.__title = title || '';\n        this.__caption = caption || '';\n        this.__altText = altText || '';\n        this.__width = width || null;\n        this.__height = height || null;\n        this.__cardWidth = cardWidth || 'regular';\n        this.__href = href || '';\n    }\n\n    static importJSON(serializedNode) {\n        const {src, caption, title, altText, width, height, cardWidth, href} = serializedNode;\n        const node = new this({\n            src,\n            caption,\n            title,\n            altText,\n            width,\n            height,\n            href,\n            cardWidth\n        });\n        return node;\n    }\n\n    exportJSON() {\n        // checks if src is a data string\n        const src = this.getSrc();\n        const isBlob = src.startsWith('data:');\n        const dataset = {\n            type: 'image',\n            version: 1,\n            src: isBlob ? '<base64String>' : this.getSrc(),\n            width: this.getImgWidth(),\n            height: this.getImgHeight(),\n            title: this.getTitle(),\n            altText: this.getAltText(),\n            caption: this.getCaption(),\n            cardWidth: this.getCardWidth(),\n            href: this.getHref()\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new ImageParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderImageNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getSrc() {\n        const self = this.getLatest();\n        return self.__src;\n    }\n\n    setSrc(src) {\n        const writable = this.getWritable();\n        return writable.__src = src;\n    }\n\n    getTitle() {\n        const self = this.getLatest();\n        return self.__title;\n    }\n\n    setTitle(title) {\n        const writable = this.getWritable();\n        return writable.__title = title;\n    }\n\n    getHref() {\n        const self = this.getLatest();\n        return self.__href;\n    }\n\n    setHref(href) {\n        const writable = this.getWritable();\n        return writable.__href = href;\n    }\n\n    setCardWidth(cardWidth) {\n        const writable = this.getWritable();\n        return writable.__cardWidth = cardWidth;\n    }\n\n    getCardWidth() {\n        const self = this.getLatest();\n        return self.__cardWidth;\n    }\n\n    getImgWidth() {\n        const self = this.getLatest();\n        return self.__width;\n    }\n\n    setImgWidth(width) {\n        const writable = this.getWritable();\n        return writable.__width = width;\n    }\n\n    getImgHeight() {\n        const self = this.getLatest();\n        return self.__height;\n    }\n\n    setImgHeight(height) {\n        const writable = this.getWritable();\n        return writable.__height = height;\n    }\n\n    getCaption() {\n        const self = this.getLatest();\n        return self.__caption;\n    }\n\n    setCaption(caption) {\n        const writable = this.getWritable();\n        return writable.__caption = caption;\n    }\n\n    getAltText() {\n        const self = this.getLatest();\n        return self.__altText;\n    }\n\n    setAltText(altText) {\n        const writable = this.getWritable();\n        return writable.__altText = altText;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n}\n\nexport const $createImageNode = (dataset) => {\n    return new ImageNode(dataset);\n};\n\nexport function $isImageNode(node) {\n    return node instanceof ImageNode;\n}\n","import {readCaptionFromElement} from '../../utils/read-caption-from-element';\n\nexport class CodeBlockParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            figure: () => ({\n                conversion(domNode) {\n                    if (domNode.tagName === 'FIGURE') {\n                        const pre = domNode.querySelector('pre');\n\n                        // If this figure doesn't have a pre tag in it\n                        if (!pre) {\n                            return null;\n                        }\n\n                        let code = pre.querySelector('code');\n                        let figcaption = domNode.querySelector('figcaption');\n\n                        // if there's no caption the pre key should pick it up\n                        if (!code || !figcaption) {\n                            return null;\n                        }\n\n                        let payload = {\n                            code: code.textContent,\n                            caption: readCaptionFromElement(domNode)\n                        };\n\n                        let preClass = pre.getAttribute('class') || '';\n                        let codeClass = code.getAttribute('class') || '';\n                        let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n                        let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n                        if (languageMatches) {\n                            payload.language = languageMatches[1].toLowerCase();\n                        }\n\n                        const node = new self.NodeClass(payload);\n                        return {node};\n                    }\n                    return null;\n                },\n                priority: 2 // falls back to pre if no caption\n            }),\n            pre: () => ({\n                conversion(domNode) {\n                    if (domNode.tagName === 'PRE') {\n                        let [codeElement] = domNode.children;\n\n                        if (codeElement && codeElement.tagName === 'CODE') {\n                            let payload = {code: codeElement.textContent};\n                            let preClass = domNode.getAttribute('class') || '';\n                            let codeClass = codeElement.getAttribute('class') || '';\n                            let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n                            let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n                            if (languageMatches) {\n                                payload.language = languageMatches[1].toLowerCase();\n                            }\n                            const node = new self.NodeClass(payload);\n                            return {node};\n                        }\n                    }\n\n                    return null;\n                },\n                priority: 1\n            })\n        };\n    }\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nexport function renderCodeBlockNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n\n    if (!node.getCode() || node.getCode().trim() === '') {\n        return document.createTextNode('');\n    }\n\n    const pre = document.createElement('pre');\n    const code = document.createElement('code');\n\n    if (node.getLanguage()) {\n        code.setAttribute('class', `language-${node.getLanguage()}`);\n    }\n\n    code.appendChild(document.createTextNode(node.getCode()));\n    pre.appendChild(code);\n\n    if (node.getCaption()) {\n        let figure = document.createElement('figure');\n        figure.setAttribute('class', 'kg-card kg-code-card');\n        figure.appendChild(pre);\n\n        let figcaption = document.createElement('figcaption');\n        figcaption.appendChild(document.createTextNode(node.getCaption()));\n        figure.appendChild(figcaption);\n\n        return figure;\n    } else {\n        return pre;\n    }\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {CodeBlockParser} from './CodeBlockParser';\nimport {renderCodeBlockNodeToDOM} from './CodeBlockRenderer';\n\nexport const INSERT_CODE_BLOCK_COMMAND = createCommand();\n\nexport class CodeBlockNode extends KoenigDecoratorNode {\n    __code;\n    __language;\n    __caption;\n\n    static getType() {\n        return 'codeblock';\n    }\n\n    static clone(node) {\n        // must use `this` so the extended class in the Editor uses the correct class when cloning\n        // without needing to override this method\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            caption: 'html'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            code: self.__code,\n            language: self.__language,\n            caption: self.__caption\n        };\n    }\n\n    static importJSON(serializedNode) {\n        const {code, language, caption} = serializedNode;\n        const node = new this({code, language, caption});\n        return node;\n    }\n\n    exportJSON() {\n        return {\n            type: 'codeblock',\n            version: 1,\n            code: this.__code,\n            language: this.__language,\n            caption: this.__caption\n        };\n    }\n\n    constructor({code, language, caption} = {}, key) {\n        super(key);\n        this.__code = code;\n        this.__language = language;\n        this.__caption = caption;\n    }\n\n    static importDOM() {\n        const parser = new CodeBlockParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderCodeBlockNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        return document.createElement('div');\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getCaption() {\n        const self = this.getLatest();\n        return self.__caption;\n    }\n\n    setCaption(caption) {\n        const self = this.getWritable();\n        self.__caption = caption;\n    }\n\n    getCode() {\n        const self = this.getLatest();\n        return self.__code;\n    }\n\n    setCode(code) {\n        const self = this.getWritable();\n        self.__code = code;\n    }\n\n    getLanguage() {\n        const self = this.getLatest();\n        return self.__language;\n    }\n\n    setLanguage(language) {\n        const self = this.getWritable();\n        self.__language = language;\n    }\n\n    getTextContent() {\n        const self = this.getLatest();\n        return self.__code;\n    }\n\n    // should be overwritten\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__code;\n    }\n}\n\nexport function $createCodeBlockNode(dataset) {\n    return new CodeBlockNode(dataset);\n}\n\nexport function $isCodeBlockNode(node) {\n    return node instanceof CodeBlockNode;\n}\n","import markdownHtmlRenderer from '@tryghost/kg-markdown-html-renderer';\nimport {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nexport function renderMarkdownNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n\n    const html = markdownHtmlRenderer.render(node.getMarkdown() || '', options);\n\n    const div = document.createElement('div');\n\n    div.innerHTML = html;\n\n    return div;\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {renderMarkdownNodeToDOM} from './MarkdownRenderer';\n\nexport const INSERT_MARKDOWN_COMMAND = createCommand();\n\nexport class MarkdownNode extends KoenigDecoratorNode {\n    __markdown;\n\n    static getType() {\n        return 'markdown';\n    }\n\n    static clone(node) {\n        return new this(node.getDataset(), node.__key);\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            markdown: 'markdown'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            markdown: self.__markdown\n        };\n    }\n\n    static importJSON(serializedNode) {\n        const {markdown} = serializedNode;\n        const node = new this({markdown});\n        return node;\n    }\n\n    exportJSON() {\n        return {\n            type: 'markdown',\n            version: 1,\n            markdown: this.getMarkdown()\n        };\n    }\n\n    constructor({markdown} = {}, key) {\n        super(key);\n        this.__markdown = markdown;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderMarkdownNodeToDOM(this, options);\n        return {\n            element,\n            type: 'inner'\n        };\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getMarkdown() {\n        return this.__markdown;\n    }\n\n    setMarkdown(markdown) {\n        const writable = this.getWritable();\n        return writable.__markdown = markdown;\n    }\n\n    // should be overwritten\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__markdown;\n    }\n}\n\nexport function $createMarkdownNode(dataset) {\n    return new MarkdownNode(dataset);\n}\n\nexport function $isMarkdownNode(node) {\n    return node instanceof MarkdownNode;\n}\n","import {readCaptionFromElement} from '../../utils/read-caption-from-element';\n\nexport class VideoParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            figure: () => ({\n                conversion(domNode) {\n                    const isKgVideoCard = domNode.classList?.contains('kg-video-card');\n                    if (domNode.tagName === 'FIGURE' && isKgVideoCard) {\n                        const videoNode = domNode.querySelector('.kg-video-container video');\n                        const durationNode = domNode.querySelector('.kg-video-duration');\n                        const videoSrc = videoNode && videoNode.src;\n                        const videoWidth = videoNode && videoNode.width;\n                        const videoHeight = videoNode && videoNode.height;\n                        const durationText = durationNode && durationNode.innerHTML.trim();\n                        const captionText = readCaptionFromElement(domNode);\n\n                        if (!videoSrc) {\n                            return null;\n                        }\n\n                        const payload = {\n                            src: videoSrc,\n                            loop: !!videoNode.loop,\n                            cardWidth: getCardWidth(videoNode)\n                        };\n\n                        if (durationText) {\n                            const [minutes, seconds] = durationText.split(':');\n                            try {\n                                payload.duration = parseInt(minutes) * 60 + parseInt(seconds);\n                            } catch (e) {\n                                // ignore duration\n                            }\n                        }\n\n                        if (domNode.dataset.kgThumbnail) {\n                            payload.thumbnailSrc = domNode.dataset.kgThumbnail;\n                        }\n\n                        if (domNode.dataset.kgCustomThumbnail) {\n                            payload.customThumbnailSrc = domNode.dataset.kgCustomThumbnail;\n                        }\n\n                        if (captionText) {\n                            payload.caption = captionText;\n                        }\n\n                        if (videoWidth) {\n                            payload.width = videoWidth;\n                        }\n\n                        if (videoHeight) {\n                            payload.height = videoHeight;\n                        }\n\n                        const node = new self.NodeClass(payload);\n                        return {node};\n                    }\n\n                    return null;\n                },\n                priority: 1\n            })\n        };\n    }\n}\n\nfunction getCardWidth(domNode) {\n    if (domNode.classList.contains('kg-width-full')) {\n        return 'full';\n    } else if (domNode.classList.contains('kg-width-wide')) {\n        return 'wide';\n    } else {\n        return 'regular';\n    }\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nexport function renderVideoNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n\n    if (!node.getSrc() || node.getSrc().trim() === '') {\n        return document.createTextNode('');\n    }\n\n    const cardClasses = getCardClasses(node).join(' ');\n\n    const htmlString = options.target === 'email'\n        ? emailCardTemplate({node, options, cardClasses})\n        : cardTemplate({node, cardClasses});\n\n    const element = document.createElement('div');\n    element.innerHTML = htmlString.trim();\n\n    return element.firstElementChild;\n}\n\nexport function cardTemplate({node, cardClasses}) {\n    const width = node.getVideoWidth();\n    const height = node.getVideoHeight();\n    const posterSpacerSrc = `https://img.spacergif.org/v1/${width}x${height}/0a/spacer.png`;\n    const autoplayAttr = node.getLoop() ? 'loop autoplay muted' : '';\n    const thumbnailSrc = node.getCustomThumbnailSrc() || node.getThumbnailSrc();\n    const hideControlsClass = node.getLoop() ? ' kg-video-hide' : '';\n\n    return (\n        `\n        <figure class=\"${cardClasses}\" data-kg-thumbnail=${node.getThumbnailSrc()} data-kg-custom-thumbnail=${node.getCustomThumbnailSrc()}>\n            <div class=\"kg-video-container\">\n                <video\n                    src=\"${node.getSrc()}\"\n                    poster=\"${posterSpacerSrc}\"\n                    width=\"${width}\"\n                    height=\"${height}\"\n                    ${autoplayAttr}\n                    playsinline\n                    preload=\"metadata\"\n                    style=\"background: transparent url('${thumbnailSrc}') 50% 50% / cover no-repeat;\"\n                ></video>\n                <div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"/>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container${hideControlsClass}\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">${node.getFormattedDuration()}</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\">1&#215;</button>\n                        <button class=\"kg-video-unmute-icon\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\"/>\n                    </div>\n                </div>\n            </div>\n            ${node.getCaption() ? `<figcaption>${node.getCaption()}</figcaption>` : ''}\n        </figure>\n    `\n    );\n}\n\nexport function emailCardTemplate({node, options, cardClasses}) {\n    const thumbnailSrc = node.getCustomThumbnailSrc() || node.getThumbnailSrc();\n    const emailTemplateMaxWidth = 600;\n    const aspectRatio = node.getVideoWidth() / node.getVideoHeight();\n    const emailSpacerWidth = Math.round(emailTemplateMaxWidth / 4);\n    const emailSpacerHeight = Math.round(emailTemplateMaxWidth / aspectRatio);\n    const posterSpacerSrc = `https://img.spacergif.org/v1/${emailSpacerWidth}x${emailSpacerHeight}/0a/spacer.png`;\n    const outlookCircleLeft = Math.round((emailTemplateMaxWidth / 2) - 39);\n    const outlookCircleTop = Math.round((emailSpacerHeight / 2) - 39);\n    const outlookPlayLeft = Math.round((emailTemplateMaxWidth / 2) - 11);\n    const outlookPlayTop = Math.round((emailSpacerHeight / 2) - 17);\n\n    return (\n        `\n         <figure class=\"${cardClasses}\">\n            <!--[if !mso !vml]-->\n            <a class=\"kg-video-preview\" href=\"${options.postUrl}\" aria-label=\"Play video\" style=\"mso-hide: all\">\n                <table\n                    cellpadding=\"0\"\n                    cellspacing=\"0\"\n                    border=\"0\"\n                    width=\"100%\"\n                    background=\"${thumbnailSrc}\"\n                    role=\"presentation\"\n                    style=\"background: url('${thumbnailSrc}') left top / cover; mso-hide: all\"\n                >\n                    <tr style=\"mso-hide: all\">\n                        <td width=\"25%\" style=\"visibility: hidden; mso-hide: all\">\n                            <img src=\"${posterSpacerSrc}\" alt=\"\" width=\"100%\" border=\"0\" style=\"height: auto; opacity: 0; visibility: hidden; mso-hide: all;\">\n                        </td>\n                        <td width=\"50%\" align=\"center\" valign=\"middle\" style=\"vertical-align: middle; mso-hide: all;\">\n                            <div class=\"kg-video-play-button\" style=\"mso-hide: all\"><div style=\"mso-hide: all\"></div></div>\n                        </td>\n                        <td width=\"25%\" style=\"mso-hide: all\">&nbsp;</td>\n                    </tr>\n                </table>\n            </a>\n            <!--[endif]-->\n\n            <!--[if vml]>\n            <v:group xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:w=\"urn:schemas-microsoft-com:office:word\" coordsize=\"${emailTemplateMaxWidth},${emailSpacerHeight}\" coordorigin=\"0,0\" href=\"${options.postUrl}\" style=\"width:${emailTemplateMaxWidth}px;height:${emailSpacerHeight}px;\">\n                <v:rect fill=\"t\" stroked=\"f\" style=\"position:absolute;width:${emailTemplateMaxWidth};height:${emailSpacerHeight};\"><v:fill src=\"${thumbnailSrc}\" type=\"frame\"/></v:rect>\n                <v:oval fill=\"t\" strokecolor=\"white\" strokeweight=\"4px\" style=\"position:absolute;left:${outlookCircleLeft};top:${outlookCircleTop};width:78;height:78\"><v:fill color=\"black\" opacity=\"30%\" /></v:oval>\n                <v:shape coordsize=\"24,32\" path=\"m,l,32,24,16,xe\" fillcolor=\"white\" stroked=\"f\" style=\"position:absolute;left:${outlookPlayLeft};top:${outlookPlayTop};width:30;height:34;\" />\n            </v:group>\n            <![endif]-->\n\n            ${node.getCaption() ? `<figcaption>${node.getCaption()}</figcaption>` : ''}\n        </figure>\n        `\n    );\n}\n\nexport function getCardClasses(node) {\n    let cardClasses = ['kg-card kg-video-card'];\n\n    if (node.getCardWidth()) {\n        cardClasses.push(`kg-width-${node.getCardWidth()}`);\n    }\n    if (node.getCaption()) {\n        cardClasses.push(`kg-card-hascaption`);\n    }\n\n    return cardClasses;\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {VideoParser} from './VideoParser';\nimport {renderVideoNodeToDOM} from './VideoRenderer';\n\nexport const INSERT_VIDEO_COMMAND = createCommand();\nconst NODE_TYPE = 'video';\n\nexport class VideoNode extends KoenigDecoratorNode {\n    // payload properties\n    __src;\n    __caption;\n    __width;\n    __height;\n    __duration;\n    __thumbnailSrc;\n    __customThumbnailSrc;\n    __cardWidth;\n    __loop;\n\n    static getType() {\n        return NODE_TYPE;\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            src: 'url',\n            thumbnailSrc: 'url',\n            customThumbnailSrc: 'url',\n            caption: 'html'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            src: self.__src,\n            caption: self.__caption,\n            width: self.__width,\n            height: self.__height,\n            duration: self.__duration,\n            thumbnailSrc: self.__thumbnailSrc,\n            customThumbnailSrc: self.__customThumbnailSrc,\n            cardWidth: self.__cardWidth,\n            loop: self.__loop\n        };\n    }\n\n    constructor({src, caption, width, height, duration, thumbnailSrc, customThumbnailSrc, cardWidth, loop} = {}, key) {\n        super(key);\n        this.__src = src || '';\n        this.__caption = caption || '';\n        this.__width = width || null;\n        this.__height = height || null;\n        this.__duration = duration || 0;\n        this.__thumbnailSrc = thumbnailSrc || '';\n        this.__customThumbnailSrc = customThumbnailSrc || '';\n        this.__cardWidth = cardWidth || 'regular';\n        this.__loop = !!loop;\n    }\n\n    static importJSON(serializedNode) {\n        const {src, caption, width, height, duration, thumbnailSrc, customThumbnailSrc, cardWidth, loop} = serializedNode;\n        const node = new this({\n            src,\n            caption,\n            width,\n            height,\n            duration,\n            thumbnailSrc,\n            customThumbnailSrc,\n            cardWidth,\n            loop\n        });\n        return node;\n    }\n\n    exportJSON() {\n        // checks if src is a data string\n        const src = this.getSrc();\n        const isBlob = src.startsWith('data:');\n        const dataset = {\n            type: NODE_TYPE,\n            version: 1,\n            src: isBlob ? '<base64String>' : this.getSrc(),\n            caption: this.getCaption(),\n            width: this.getVideoWidth(),\n            height: this.getVideoHeight(),\n            duration: this.getDuration(),\n            thumbnailSrc: this.getThumbnailSrc(),\n            customThumbnailSrc: this.getCustomThumbnailSrc(),\n            cardWidth: this.getCardWidth(),\n            loop: this.getLoop()\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new VideoParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderVideoNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getSrc() {\n        const self = this.getLatest();\n        return self.__src;\n    }\n\n    setSrc(src) {\n        const writable = this.getWritable();\n        return writable.__src = src;\n    }\n\n    getCaption() {\n        const self = this.getLatest();\n        return self.__caption;\n    }\n\n    setCaption(caption) {\n        const writable = this.getWritable();\n        return writable.__caption = caption;\n    }\n\n    getVideoWidth() {\n        const self = this.getLatest();\n        return self.__width;\n    }\n\n    setVideoWidth(width) {\n        const writable = this.getWritable();\n        return writable.__width = width;\n    }\n\n    getVideoHeight() {\n        const self = this.getLatest();\n        return self.__height;\n    }\n\n    setVideoHeight(height) {\n        const writable = this.getWritable();\n        return writable.__height = height;\n    }\n\n    getDuration() {\n        const self = this.getLatest();\n        return self.__duration;\n    }\n\n    getFormattedDuration() {\n        const minutes = Math.floor(this.getDuration() / 60);\n        const seconds = Math.floor(this.getDuration() - (minutes * 60));\n        const paddedSeconds = String(seconds).padStart(2, '0');\n        const formattedDuration = `${minutes}:${paddedSeconds}`;\n        return formattedDuration;\n    }\n\n    setDuration(duration) {\n        const writable = this.getWritable();\n        return writable.__duration = duration;\n    }\n\n    getThumbnailSrc() {\n        const self = this.getLatest();\n        return self.__thumbnailSrc;\n    }\n\n    setThumbnailSrc(thumbnailSrc) {\n        const writable = this.getWritable();\n        return writable.__thumbnailSrc = thumbnailSrc;\n    }\n\n    getCustomThumbnailSrc() {\n        const self = this.getLatest();\n        return self.__customThumbnailSrc;\n    }\n\n    setCustomThumbnailSrc(customThumbnailSrc) {\n        const writable = this.getWritable();\n        return writable.__customThumbnailSrc = customThumbnailSrc;\n    }\n\n    setCardWidth(cardWidth) {\n        const writable = this.getWritable();\n        return writable.__cardWidth = cardWidth;\n    }\n\n    getCardWidth() {\n        const self = this.getLatest();\n        return self.__cardWidth;\n    }\n\n    getLoop() {\n        const self = this.getLatest();\n        return self.__loop;\n    }\n\n    setLoop(loop) {\n        const writable = this.getWritable();\n        return writable.__loop = loop;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__src;\n    }\n}\n\nexport const $createVideoNode = (dataset) => {\n    return new VideoNode(dataset);\n};\n\nexport function $isVideoNode(node) {\n    return node instanceof VideoNode;\n}\n","export class AudioParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            div: (nodeElem) => {\n                const isKgAudioCard = nodeElem.classList?.contains('kg-audio-card');\n                if (nodeElem.tagName === 'DIV' && isKgAudioCard) {\n                    return {\n                        conversion(domNode) {\n                            const titleNode = domNode?.querySelector('.kg-audio-title');\n                            const audioNode = domNode?.querySelector('.kg-audio-player-container audio');\n                            const durationNode = domNode?.querySelector('.kg-audio-duration');\n                            const thumbnailNode = domNode?.querySelector('.kg-audio-thumbnail');\n                            const title = titleNode && titleNode.innerHTML.trim();\n                            const audioSrc = audioNode && audioNode.src;\n                            const thumbnailSrc = thumbnailNode && thumbnailNode.src;\n                            const durationText = durationNode && durationNode.innerHTML.trim();\n                            const payload = {\n                                src: audioSrc,\n                                title: title\n                            };\n                            if (thumbnailSrc) {\n                                payload.thumbnailSrc = thumbnailSrc;\n                            }\n\n                            if (durationText) {\n                                const [minutes, seconds = 0] = durationText.split(':');\n                                try {\n                                    payload.duration = parseInt(minutes) * 60 + parseInt(seconds);\n                                } catch (e) {\n                                    // ignore duration\n                                }\n                            }\n\n                            const node = new self.NodeClass(payload);\n                            return {node};\n                        },\n                        priority: 1\n                    };\n                }\n                return null;\n            }\n        };\n    }\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nexport function renderAudioNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n\n    if (!node.getSrc() || node.getSrc().trim() === '') {\n        return document.createTextNode('');\n    }\n\n    return frontendTemplate(node, document);\n}\n\nfunction frontendTemplate(node, document) {\n    let thumbnailCls = 'kg-audio-thumbnail';\n    let emptyThumbnailCls = 'kg-audio-thumbnail placeholder';\n    if (!node.getThumbnailSrc()) {\n        thumbnailCls += ' kg-audio-hide';\n    } else {\n        emptyThumbnailCls += ' kg-audio-hide';\n    }\n\n    const cardDiv = document.createElement('div');\n    cardDiv.setAttribute('class', 'kg-card kg-audio-card');\n    const img = document.createElement('img');\n    img.src = node.getThumbnailSrc();\n    img.alt = 'audio-thumbnail';\n    img.setAttribute('class', thumbnailCls);\n    cardDiv.appendChild(img);\n\n    const emptyThumbnailDiv = document.createElement('div');\n    emptyThumbnailDiv.setAttribute('class', emptyThumbnailCls);\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('width', '24');\n    svg.setAttribute('height', '24');\n    svg.setAttribute('fill', 'none');\n    const path1 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path1.setAttribute('fill-rule', 'evenodd');\n    path1.setAttribute('clip-rule', 'evenodd');\n    path1.setAttribute('d', 'M7.5 15.33a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm-2.25.75a2.25 2.25 0 1 1 4.5 0 2.25 2.25 0 0 1-4.5 0ZM15 13.83a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm-2.25.75a2.25 2.25 0 1 1 4.5 0 2.25 2.25 0 0 1-4.5 0Z');\n    svg.appendChild(path1);\n    const path2 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path2.setAttribute('fill-rule', 'evenodd');\n    path2.setAttribute('clip-rule', 'evenodd');\n    path2.setAttribute('d', 'M14.486 6.81A2.25 2.25 0 0 1 17.25 9v5.579a.75.75 0 0 1-1.5 0v-5.58a.75.75 0 0 0-.932-.727.755.755 0 0 1-.059.013l-4.465.744a.75.75 0 0 0-.544.72v6.33a.75.75 0 0 1-1.5 0v-6.33a2.25 2.25 0 0 1 1.763-2.194l4.473-.746Z');\n    svg.appendChild(path2);\n    const path3 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path3.setAttribute('fill-rule', 'evenodd');\n    path3.setAttribute('clip-rule', 'evenodd');\n    path3.setAttribute('d', 'M3 1.5a.75.75 0 0 0-.75.75v19.5a.75.75 0 0 0 .75.75h18a.75.75 0 0 0 .75-.75V5.133a.75.75 0 0 0-.225-.535l-.002-.002-3-2.883A.75.75 0 0 0 18 1.5H3ZM1.409.659A2.25 2.25 0 0 1 3 0h15a2.25 2.25 0 0 1 1.568.637l.003.002 3 2.883a2.25 2.25 0 0 1 .679 1.61V21.75A2.25 2.25 0 0 1 21 24H3a2.25 2.25 0 0 1-2.25-2.25V2.25c0-.597.237-1.169.659-1.591Z');\n    svg.appendChild(path3);\n    emptyThumbnailDiv.appendChild(svg);\n\n    cardDiv.appendChild(emptyThumbnailDiv);\n\n    const audioPlayerContainer = document.createElement('div');\n    audioPlayerContainer.setAttribute('class', 'kg-audio-player-container');\n\n    const audioElement = document.createElement('audio');\n    audioElement.setAttribute('src', node.getSrc());\n    audioElement.setAttribute('preload', 'metadata');\n    audioPlayerContainer.appendChild(audioElement);\n\n    const audioTitle = document.createElement('div');\n    audioTitle.setAttribute('class', 'kg-audio-title');\n    audioTitle.textContent = node.getTitle();\n    audioPlayerContainer.appendChild(audioTitle);\n\n    const audioPlayer = document.createElement('div');\n    audioPlayer.setAttribute('class', 'kg-audio-player');\n    const audioPlayIcon = document.createElement('button');\n    audioPlayIcon.setAttribute('class', 'kg-audio-play-icon');\n    const audioPlayIconSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    audioPlayIconSvg.setAttribute('viewBox', '0 0 24 24');\n    const playPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    playPath.setAttribute('d', 'M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z');\n    audioPlayIconSvg.appendChild(playPath);\n    audioPlayIcon.appendChild(audioPlayIconSvg);\n    audioPlayer.appendChild(audioPlayIcon);\n\n    const audioPauseIcon = document.createElement('button');\n    audioPauseIcon.setAttribute('class', 'kg-audio-pause-icon kg-audio-hide');\n    const audioPauseIconSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    audioPauseIconSvg.setAttribute('viewBox', '0 0 24 24');\n    const rectSvg = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n    rectSvg.setAttribute('x', '3');\n    rectSvg.setAttribute('y', '1');\n    rectSvg.setAttribute('width', '7');\n    rectSvg.setAttribute('height', '22');\n    rectSvg.setAttribute('rx', '1.5');\n    rectSvg.setAttribute('ry', '1.5');\n    audioPauseIconSvg.appendChild(rectSvg);\n    const rectSvg2 = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n    rectSvg2.setAttribute('x', '14');\n    rectSvg2.setAttribute('y', '1');\n    rectSvg2.setAttribute('width', '7');\n    rectSvg2.setAttribute('height', '22');\n    rectSvg2.setAttribute('rx', '1.5');\n    rectSvg2.setAttribute('ry', '1.5');\n    audioPauseIconSvg.appendChild(rectSvg2);\n    audioPauseIcon.appendChild(audioPauseIconSvg);\n    audioPlayer.appendChild(audioPauseIcon);\n\n    const audioDuration = document.createElement('span');\n    audioDuration.setAttribute('class', 'kg-audio-current-time');\n    audioDuration.textContent = '0:00';\n    audioPlayer.appendChild(audioDuration);\n\n    const audioDurationTotal = document.createElement('div');\n    audioDurationTotal.setAttribute('class', 'kg-audio-time');\n    audioDurationTotal.textContent = '/';\n    const audioDUrationNode = document.createElement('span');\n    audioDUrationNode.setAttribute('class', 'kg-audio-duration');\n    audioDUrationNode.textContent = node.getDuration();\n    audioDurationTotal.appendChild(audioDUrationNode);\n    audioPlayer.appendChild(audioDurationTotal);\n\n    const audioSlider = document.createElement('input');\n    audioSlider.setAttribute('type', 'range');\n    audioSlider.setAttribute('class', 'kg-audio-seek-slider');\n    audioSlider.setAttribute('max', '100');\n    audioSlider.setAttribute('value', '0');\n    audioPlayer.appendChild(audioSlider);\n\n    const playbackRate = document.createElement('button');\n    playbackRate.setAttribute('class', 'kg-audio-playback-rate');\n    playbackRate.innerHTML = '1&#215;'; // innerHTML not textContent because we need the HTML entity\n    audioPlayer.appendChild(playbackRate);\n\n    const unmuteIcon = document.createElement('button');\n    unmuteIcon.setAttribute('class', 'kg-audio-unmute-icon');\n    const unmuteIconSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    unmuteIconSvg.setAttribute('viewBox', '0 0 24 24');\n    const unmutePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    unmutePath.setAttribute('d', 'M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z');\n    unmuteIconSvg.appendChild(unmutePath);\n    unmuteIcon.appendChild(unmuteIconSvg);\n    audioPlayer.appendChild(unmuteIcon);\n\n    const muteIcon = document.createElement('button');\n    muteIcon.setAttribute('class', 'kg-audio-mute-icon kg-audio-hide');\n    const muteIconSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    muteIconSvg.setAttribute('viewBox', '0 0 24 24');\n    const mutePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    mutePath.setAttribute('d', 'M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z');\n    muteIconSvg.appendChild(mutePath);\n    muteIcon.appendChild(muteIconSvg);\n    audioPlayer.appendChild(muteIcon);\n\n    const volumeSlider = document.createElement('input');\n    volumeSlider.setAttribute('type', 'range');\n    volumeSlider.setAttribute('class', 'kg-audio-volume-slider');\n    volumeSlider.setAttribute('max', '100');\n    volumeSlider.setAttribute('value', '100');\n    audioPlayer.appendChild(volumeSlider);\n\n    audioPlayerContainer.appendChild(audioPlayer);\n    cardDiv.appendChild(audioPlayerContainer);\n\n    return cardDiv;\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {AudioParser} from './AudioParser';\nimport {renderAudioNodeToDOM} from './AudioRenderer';\n\nexport const INSERT_AUDIO_COMMAND = createCommand();\nconst NODE_TYPE = 'audio';\n\nexport class AudioNode extends KoenigDecoratorNode {\n    // payload properties\n    __src;\n    __title;\n    __duration;\n    __mimeType;\n    __thumbnailSrc;\n\n    static getType() {\n        return NODE_TYPE;\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            src: 'url'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            src: self.__src,\n            title: self.__title,\n            duration: self.__duration,\n            mimeType: self.__mimeType,\n            thumbnailSrc: self.__thumbnailSrc\n        };\n    }\n\n    constructor({src, title, duration, thumbnailSrc, mimeType} = {}, key) {\n        super(key);\n        this.__src = src || '';\n        this.__title = title || '';\n        this.__duration = duration || 0;\n        this.__mimeType = mimeType || '';\n        this.__thumbnailSrc = thumbnailSrc || '';\n    }\n\n    static importJSON(serializedNode) {\n        const {src, title, duration, mimeType, thumbnailSrc} = serializedNode;\n        const node = new this({\n            src,\n            title,\n            mimeType,\n            duration,\n            thumbnailSrc\n        });\n        return node;\n    }\n\n    exportJSON() {\n        // checks if src is a data string\n        const src = this.getSrc();\n        const isBlob = src.startsWith('data:');\n        const dataset = {\n            type: NODE_TYPE,\n            version: 1,\n            src: isBlob ? '<base64String>' : this.getSrc(),\n            title: this.getTitle(),\n            mimeType: this.getMimeType(),\n            duration: this.getDuration(),\n            thumbnailSrc: this.getThumbnailSrc()\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new AudioParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderAudioNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getSrc() {\n        const self = this.getLatest();\n        return self.__src;\n    }\n\n    setSrc(src) {\n        const writable = this.getWritable();\n        return writable.__src = src;\n    }\n\n    getTitle() {\n        const self = this.getLatest();\n        return self.__title;\n    }\n\n    setTitle(title) {\n        const writable = this.getWritable();\n        return writable.__title = title;\n    }\n\n    getDuration() {\n        const self = this.getLatest();\n        return self.__duration;\n    }\n\n    setDuration(duration) {\n        const writable = this.getWritable();\n        return writable.__duration = duration;\n    }\n\n    getMimeType() {\n        const self = this.getLatest();\n        return self.__mimeType;\n    }\n\n    setMimeType(mimeType) {\n        const writable = this.getWritable();\n        return writable.__mimeType = mimeType;\n    }\n\n    getThumbnailSrc() {\n        const self = this.getLatest();\n        return self.__thumbnailSrc;\n    }\n\n    setThumbnailSrc(thumbnailSrc) {\n        const writable = this.getWritable();\n        return writable.__thumbnailSrc = thumbnailSrc;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__src;\n    }\n}\n\nexport const $createAudioNode = (dataset) => {\n    return new AudioNode(dataset);\n};\n\nexport function $isAudioNode(node) {\n    return node instanceof AudioNode;\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nexport function renderCalloutNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n\n    /* c8 ignore stop */\n\n    const document = options.createDocument();\n\n    const element = document.createElement('div');\n    element.classList.add('kg-card', 'kg-callout-card', `kg-callout-card-${node.getBackgroundColor()}`);\n    if (node.getHasEmoji()) {\n        const emojiElement = document.createElement('div');\n        emojiElement.classList.add('kg-callout-emoji');\n        emojiElement.textContent = node.getEmojiValue();\n        element.appendChild(emojiElement);\n    }\n    const textElement = document.createElement('div');\n    textElement.classList.add('kg-callout-text');\n    textElement.innerHTML = node.getText();\n    element.appendChild(textElement);\n    return element;\n}\n","const getColorTag = (nodeElem) => {\n    const colorClass = nodeElem.classList?.value?.match(/kg-callout-card-(\\w+)/);\n    return colorClass && colorClass[1];\n};\n\nexport class CalloutParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            div: (nodeElem) => {\n                const isKgCalloutCard = nodeElem.classList?.contains('kg-callout-card');\n                if (nodeElem.tagName === 'DIV' && isKgCalloutCard) {\n                    return {\n                        conversion(domNode) {\n                            const textNode = domNode?.querySelector('.kg-callout-text');\n                            const emojiNode = domNode?.querySelector('.kg-callout-emoji');\n                            const color = getColorTag(domNode);\n\n                            const payload = {\n                                text: textNode && textNode.innerHTML.trim(),\n                                hasEmoji: emojiNode ? true : false,\n                                emojiValue: emojiNode && emojiNode.innerHTML.trim(),\n                                backgroundColor: color\n                            };\n\n                            const node = new self.NodeClass(payload);\n                            return {node};\n                        },\n                        priority: 1\n                    };\n                }\n                return null;\n            }\n        };\n    }\n}","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {renderCalloutNodeToDOM} from './CalloutRenderer';\nimport {CalloutParser} from './CalloutParser';\n\nexport const INSERT_CALLOUT_COMMAND = createCommand();\nconst NODE_TYPE = 'callout';\n\nexport class CalloutNode extends KoenigDecoratorNode {\n    // payload properties\n    __text;\n    __hasEmoji;\n    __emojiValue;\n    __backgroundColor;\n\n    static getType() {\n        return NODE_TYPE;\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            text: self.__text,\n            hasEmoji: self.__hasEmoji,\n            emojiValue: self.__emojiValue,\n            backgroundColor: self.__backgroundColor\n        };\n    }\n\n    constructor({text, hasEmoji = true, emojiValue, backgroundColor} = {}, key) {\n        super(key);\n        this.__text = text || '';\n        this.__hasEmoji = hasEmoji;\n        this.__emojiValue = emojiValue || '💡';\n        this.__backgroundColor = backgroundColor || 'blue';\n    }\n\n    static importJSON(serializedNode) {\n        const {text, hasEmoji, backgroundColor, emojiValue} = serializedNode;\n        return new this({\n            text,\n            hasEmoji,\n            emojiValue,\n            backgroundColor\n        });\n    }\n\n    exportJSON() {\n        const dataset = {\n            type: NODE_TYPE,\n            version: 1,\n            text: this.getText(),\n            hasEmoji: this.__hasEmoji,\n            emojiValue: this.__emojiValue,\n            backgroundColor: this.__backgroundColor\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new CalloutParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderCalloutNodeToDOM(this, options);\n        return {element};\n    }\n\n    createDom() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDom() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n\n    getText() {\n        const self = this.getLatest();\n        return self.__text;\n    }\n\n    setText(text) {\n        const writeable = this.getWritable();\n        writeable.__text = text;\n    }\n\n    getBackgroundColor() {\n        const self = this.getLatest();\n        return self.__backgroundColor;\n    }\n\n    setBackgroundColor(color) {\n        const writeable = this.getWritable();\n        writeable.__backgroundColor = color;\n    }\n\n    getHasEmoji() {\n        const self = this.getLatest();\n        return self.__hasEmoji;\n    }\n\n    setHasEmoji(hasEmoji) {\n        const writeable = this.getWritable();\n        writeable.__hasEmoji = hasEmoji;\n    }\n\n    getEmojiValue() {\n        const self = this.getLatest();\n        return self.__emojiValue;\n    }\n\n    setEmojiValue(emojiValue) {\n        const writeable = this.getWritable();\n        writeable.__emojiValue = emojiValue;\n    }\n\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n}\n\nexport function $isCalloutNode(node) {\n    return node instanceof CalloutNode;\n}\n\nexport const $createCalloutNode = (dataset) => {\n    return new CalloutNode(dataset);\n};\n","export class AsideParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            aside: () => ({\n                conversion() {\n                    const node = new self.NodeClass();\n                    return {node};\n                },\n                priority: 0\n            })\n        };\n    }\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nexport function renderAsideToDOM(_, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n\n    const aside = document.createElement('aside');\n    return aside;\n}\n","import {ElementNode} from 'lexical';\nimport {AsideParser} from './AsideParser';\nimport {renderAsideToDOM} from './AsideRenderer';\n\nexport class AsideNode extends ElementNode {\n    static getType() {\n        return 'aside';\n    }\n\n    static clone(node) {\n        return new this(\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {};\n    }\n\n    constructor(key) {\n        super(key);\n    }\n\n    static importJSON(serializedNode) {\n        const node = new this();\n        node.setFormat(serializedNode.format);\n        node.setIndent(serializedNode.indent);\n        node.setDirection(serializedNode.direction);\n        return node;\n    }\n\n    exportJSON() {\n        const dataset = {\n            ...super.exportJSON(),\n            type: 'aside',\n            version: 1\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new AsideParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderAsideToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n}\n\nexport function $createAsideNode() {\n    return new AsideNode();\n}\n\nexport function $isAsideNode(node) {\n    return node instanceof AsideNode;\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nexport function renderHorizontalRuleToDOM(_, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n\n    const hr = document.createElement('hr');\n    return hr;\n}\n","export class HorizontalRuleParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            hr: () => ({\n                conversion() {\n                    const node = new self.NodeClass();\n                    return {node};\n                },\n                priority: 0\n            })\n        };\n    }\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {renderHorizontalRuleToDOM} from './HorizontalRuleRenderer';\nimport {HorizontalRuleParser} from './HorizontalRuleParser';\n\nexport const INSERT_HORIZONTAL_RULE_COMMAND = createCommand();\n\nexport class HorizontalRuleNode extends KoenigDecoratorNode {\n    static getType() {\n        return 'horizontalrule';\n    }\n\n    static clone(node) {\n        return new this(\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {};\n    }\n\n    constructor(key) {\n        super(key);\n    }\n\n    static importJSON() {\n        const node = new this();\n        return node;\n    }\n\n    exportJSON() {\n        const dataset = {\n            type: 'horizontalrule',\n            version: 1\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new HorizontalRuleParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderHorizontalRuleToDOM(this, options);\n        return {element};\n    }\n\n    getTextContent() {\n        return '\\n';\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n}\n\nexport function $createHorizontalRuleNode() {\n    return new HorizontalRuleNode();\n}\n\nexport function $isHorizontalRuleNode(node) {\n    return node instanceof HorizontalRuleNode;\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nexport function renderHtmlNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n\n    const html = node.getHtml() || '';\n\n    const div = document.createElement('div');\n\n    div.innerHTML = html;\n\n    return div;\n}\n","export class HtmlParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            '#comment': () => {\n                return {\n                    conversion(domNode) {\n                        const isCommentNode = domNode.nodeType === 8;\n                        if (isCommentNode && domNode.nodeValue.trim() === 'kg-card-begin: html') {\n                            let html = [];\n                            let nextNode = domNode.nextSibling;\n\n                            while (nextNode && !isHtmlEndComment(nextNode)) {\n                                let currentNode = nextNode;\n                                html.push(currentNode.outerHTML);\n                                nextNode = currentNode.nextSibling;\n                                // remove nodes as we go so that they don't go through the parser\n                                currentNode.remove();\n                            }\n\n                            let payload = {html: html.join('\\n').trim()};\n                            const node = new self.NodeClass(payload);\n                            return {node};\n                        }\n\n                        return null;\n                    },\n                    priority: 0\n                };\n            }\n        };\n    }\n}\n\nfunction isHtmlEndComment(node) {\n    return node && node.nodeType === 8 && node.nodeValue === 'kg-card-end: html';\n}","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {renderHtmlNodeToDOM} from './HtmlRenderer';\nimport {HtmlParser} from './HtmlParser';\n\nexport const INSERT_HTML_COMMAND = createCommand();\n\nexport class HtmlNode extends KoenigDecoratorNode {\n    __html;\n\n    static getType() {\n        return 'html';\n    }\n\n    static clone(node) {\n        return new this(node.getDataset(), node.__key);\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            html: 'html'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            html: self.__html\n        };\n    }\n\n    static importJSON(serializedNode) {\n        const {html} = serializedNode;\n        const node = new this({html});\n        return node;\n    }\n\n    exportJSON() {\n        return {\n            type: 'html',\n            version: 1,\n            html: this.getHtml()\n        };\n    }\n\n    constructor({html} = {}, key) {\n        super(key);\n        this.__html = html;\n    }\n\n    static importDOM() {\n        const parser = new HtmlParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderHtmlNodeToDOM(this, options);\n        return {\n            element,\n            type: 'inner'\n        };\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getHtml() {\n        const self = this.getLatest();\n        return self.__html;\n    }\n\n    setHtml(html) {\n        const writable = this.getWritable();\n        return writable.__html = html;\n    }\n\n    // should be overwritten\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__html;\n    }\n}\n\nexport function $createHtmlNode(dataset) {\n    return new HtmlNode(dataset);\n}\n\nexport function $isHtmlNode(node) {\n    return node instanceof HtmlNode;\n}\n","export class ToggleParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            div: () => ({\n                conversion(domNode) {\n                    const isKgToggleCard = domNode.classList?.contains('kg-toggle-card');\n                    if (domNode.tagName === 'DIV' && isKgToggleCard) {\n                        const headerNode = domNode.querySelector('.kg-toggle-heading-text');\n                        const header = headerNode.textContent;\n\n                        const contentNode = domNode.querySelector('.kg-toggle-content');\n                        const content = contentNode.textContent;\n\n                        const payload = {\n                            header,\n                            content\n                        };\n\n                        const node = new self.NodeClass(payload);\n                        return {node};\n                    }\n\n                    return null;\n                },\n                priority: 1\n            })\n        };\n    }\n}","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nfunction cardTemplate({node}) {\n    const content = node.getContent();\n    const header = node.getHeader();\n\n    return (\n        `\n        <div class=\"kg-card kg-toggle-card\" data-kg-toggle-state=\"close\">\n            <div class=\"kg-toggle-heading\">\n                <h4 class=\"kg-toggle-heading-text\">${header}</h4>\n                <button class=\"kg-toggle-card-icon\">\n                    <svg id=\"Regular\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                        <path class=\"cls-1\" d=\"M23.25,7.311,12.53,18.03a.749.749,0,0,1-1.06,0L.75,7.311\"></path>\n                    </svg>\n                </button>\n            </div>\n            <div class=\"kg-toggle-content\">${content}</div>\n        </div>\n        `\n    );\n}\n\nfunction emailCardTemplate({node}) {\n    const content = node.getContent();\n    const header = node.getHeader();\n\n    return (\n        `\n        <div style=\"background: transparent;\n        border: 1px solid rgba(124, 139, 154, 0.25); border-radius: 4px; padding: 20px; margin-bottom: 1.5em;\">\n            <h4 style=\"font-size: 1.375rem; font-weight: 600; margin-bottom: 8px; margin-top:0px\">${header}</h4>\n            <div style=\"font-size: 1rem; line-height: 1.5; margin-bottom: -1.5em;\">${content}</div>\n        </div>\n        `\n    );\n}\n\nexport function renderToggleNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n\n    const htmlString = options.target === 'email'\n        ? emailCardTemplate({node})\n        : cardTemplate({node});\n\n    const element = document.createElement('div');\n    element.innerHTML = htmlString.trim();\n\n    return element.firstElementChild;\n}","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {ToggleParser} from './ToggleParser';\nimport {renderToggleNodeToDOM} from './ToggleRenderer';\n\nexport const INSERT_TOGGLE_COMMAND = createCommand();\nconst NODE_TYPE = 'toggle';\n\nexport class ToggleNode extends KoenigDecoratorNode {\n    // payload properties\n    __content;\n    __header;\n\n    static getType() {\n        return NODE_TYPE;\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    static get urlTransformMap() {\n        return {\n            content: 'html',\n            header: 'html'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            content: self.__content,\n            header: self.__header\n        };\n    }\n\n    constructor({content, header} = {}, key) {\n        super(key);\n        this.__content = content || '';\n        this.__header = header || '';\n    }\n\n    static importJSON(serializedNode) {\n        const {content, header} = serializedNode;\n        return new this({\n            content,\n            header\n        });\n    }\n\n    exportJSON() {\n        const dataset = {\n            type: NODE_TYPE,\n            version: 1,\n            content: this.getContent(),\n            header: this.getHeader()\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new ToggleParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderToggleNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        return document.createElement('div');\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getContent() {\n        const self = this.getLatest();\n        return self.__content;\n    }\n\n    setContent(content) {\n        const writable = this.getWritable();\n        return writable.__content = content;\n    }\n\n    getHeader() {\n        const self = this.getLatest();\n        return self.__header;\n    }\n\n    setHeader(header) {\n        const writable = this.getWritable();\n        return writable.__header = header;\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__header && !this.__content;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n}\n\nexport const $createToggleNode = (dataset) => {\n    return new ToggleNode(dataset);\n};\n\nexport function $isToggleNode(node) {\n    return node instanceof ToggleNode;\n}\n","export class ButtonParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            div: (nodeElem) => {\n                const isButtonCard = nodeElem.classList?.contains('kg-button-card');\n                if (nodeElem.tagName === 'DIV' && isButtonCard) {\n                    return {\n                        conversion(domNode) {\n                            const alignmentClass = nodeElem.className.match(/kg-align-(left|center)/);\n                            \n                            let alignment;\n                            if (alignmentClass) {\n                                alignment = alignmentClass[1];\n                            }\n\n                            const buttonNode = domNode?.querySelector('.kg-btn');\n                            const buttonUrl = buttonNode.href;\n                            const buttonText = buttonNode.textContent;\n\n                            const payload = {\n                                buttonText: buttonText,\n                                alignment: alignment,\n                                buttonUrl: buttonUrl\n                            };\n\n                            const node = new self.NodeClass(payload);\n                            return {node};\n                        },\n                        priority: 1\n                    };\n                }\n                return null;\n            }\n        };\n    }\n}\n","export function renderButtonNodeToDOM(node, options = {}) {\n    const document = options.createDocument();\n\n    if (!node.getButtonUrl() || node.getButtonUrl().trim() === '') {\n        return document.createTextNode('');\n    }\n\n    if (options.target === 'email') {\n        return emailTemplate(node, document);\n    } else {\n        return frontendTemplate(node, document);\n    }\n}\n\nfunction frontendTemplate(node, document) {\n    const cardClasses = getCardClasses(node);\n\n    const cardDiv = document.createElement('div');\n    cardDiv.setAttribute('class', cardClasses);\n\n    const button = document.createElement('a');\n    button.setAttribute('href', node.getButtonUrl());\n    button.setAttribute('class', 'kg-btn kg-btn-accent');\n    button.textContent = node.getButtonText() || 'Button Title';\n\n    cardDiv.appendChild(button);\n    return cardDiv;\n}\n\nfunction emailTemplate(node, document) {\n    const parent = document.createElement('p');\n    \n    const buttonDiv = document.createElement('div');\n    buttonDiv.setAttribute('class', 'btn btn-accent');\n    parent.appendChild(buttonDiv);\n    \n    const table = document.createElement('table');\n    table.setAttribute('border', 0);\n    table.setAttribute('cellspacing', 0);\n    table.setAttribute('cellpadding', 0);\n    table.setAttribute('alignment',node.getAlignment());\n    buttonDiv.appendChild(table);\n    \n    const row = document.createElement('tr');\n    table.appendChild(row);\n    \n    const cell = document.createElement('td');\n    cell.setAttribute('align', 'center');\n    row.appendChild(cell);\n    \n    const button = document.createElement('a');\n    button.setAttribute('href', node.getButtonUrl());\n    button.textContent = node.getButtonText();\n    cell.appendChild(button);\n\n    return parent;\n}\n\nfunction getCardClasses(node) {\n    let cardClasses = ['kg-card kg-button-card'];\n\n    if (node.getAlignment()) {\n        cardClasses.push(`kg-align-${node.getAlignment()}`);\n    }\n\n    return cardClasses.join(' ');\n}","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {ButtonParser} from './ButtonParser';\nimport {renderButtonNodeToDOM} from './ButtonRenderer';\n\nexport const INSERT_BUTTON_COMMAND = createCommand();\n\nexport class ButtonNode extends KoenigDecoratorNode {\n    // payload properties\n    __buttonText;\n    __alignment;\n    __buttonUrl;\n\n    static getType() {\n        return 'button';\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            buttonUrl: 'url'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            buttonText: self.__buttonText,\n            alignment: self.__alignment,\n            buttonUrl: self.__buttonUrl\n        };\n    }\n\n    constructor({buttonText, alignment, buttonUrl} = {}, key) {\n        super(key);\n        this.__buttonText = buttonText || '';\n        this.__alignment = alignment || 'center';\n        this.__buttonUrl = buttonUrl || '';\n    }\n\n    static importJSON(serializedNode) {\n        const {alignment, buttonText, buttonUrl} = serializedNode;\n        const node = new this({\n            alignment,\n            buttonText,\n            buttonUrl\n        });\n        return node;\n    }\n\n    exportJSON() {\n        const dataset = {\n            type: 'button',\n            version: 1,\n            buttonText: this.getButtonText(),\n            alignment: this.getAlignment(),\n            buttonUrl: this.getButtonUrl()\n        };\n        return dataset;\n    }\n\n    // parser used when pasting html >> node\n    static importDOM() {\n        const parser = new ButtonParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    // renderer used when copying node >> html\n    exportDOM(options = {}) {\n        const element = renderButtonNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getButtonText() {\n        const self = this.getLatest();\n        return self.__buttonText;\n    }\n\n    setButtonText(buttonText) {\n        const writable = this.getWritable();\n        return writable.__buttonText = buttonText;\n    }\n\n    getAlignment() {\n        const self = this.getLatest();\n        return self.__alignment;\n    }\n\n    setAlignment(alignment) {\n        const writable = this.getWritable();\n        return writable.__alignment = alignment;\n    }\n\n    getButtonUrl() {\n        const self = this.getLatest();\n        return self.__buttonUrl;\n    }\n\n    setButtonUrl(buttonUrl) {\n        const writable = this.getWritable();\n        return writable.__buttonUrl = buttonUrl;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n}\n\nexport const $createButtonNode = (dataset) => {\n    return new ButtonNode(dataset);\n};\n\nexport function $isButtonNode(node) {\n    return node instanceof ButtonNode;\n}\n","export class BookmarkParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            figure: (nodeElem) => {\n                const isKgBookmarkCard = nodeElem.classList?.contains('kg-bookmark-card');\n                if (nodeElem.tagName === 'FIGURE' && isKgBookmarkCard) {\n                    return {\n                        conversion(domNode) {\n                            const url = domNode?.querySelector('.kg-bookmark-container').href;\n                            const icon = domNode?.querySelector('.kg-bookmark-icon').src;\n                            const title = domNode?.querySelector('.kg-bookmark-title').textContent;\n                            const description = domNode?.querySelector('.kg-bookmark-description').textContent;\n                            const author = domNode?.querySelector('.kg-bookmark-author').textContent;\n                            const publisher = domNode?.querySelector('.kg-bookmark-publisher').textContent;\n                            const thumbnail = domNode?.querySelector('.kg-bookmark-thumbnail img').src;\n                            const caption = domNode?.querySelector('figure.kg-bookmark-card figcaption').textContent;\n                            const payload = {\n                                url: url,\n                                icon: icon,\n                                title: title,\n                                description: description,\n                                author: author,\n                                publisher: publisher,\n                                thumbnail: thumbnail,\n                                caption: caption\n                            };\n                            const node = new self.NodeClass(payload);\n                            return {node};\n                        },\n                        priority: 1\n                    };\n                }\n                return null;\n            }\n        };\n    }\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n// TODO: email template?\n\nexport function renderBookmarkNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n\n    if (!node.getUrl() || node.getUrl().trim() === '') {\n        return document.createTextNode('');\n    }\n\n    if (options.target === 'email') {\n        return emailTemplate(node);\n    } else {\n        return frontendTemplate(node, document);\n    }\n}\n\nfunction emailTemplate(node) {\n    const title = node.getTitle();\n    const publisher = node.getPublisher();\n    const author = node.getAuthor();\n    const icon = node.getIcon();\n    const description = node.getDescription();\n    const url = node.getUrl();\n\n    return (\n        `<!--[if vml]>\n            <table class=\"kg-card kg-bookmark-card--outlook\" style=\"margin: 0; padding: 0; width: 100%; border: 1px solid #e5eff5; background: #ffffff; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; border-collapse: collapse; border-spacing: 0;\" width=\"100%\">\n                <tr>\n                    <td width=\"100%\" style=\"padding: 20px;\">\n                        <table style=\"margin: 0; padding: 0; border-collapse: collapse; border-spacing: 0;\">\n                            <tr>\n                                <td class=\"kg-bookmark-title--outlook\">\n                                    <a href=\"${url}\" style=\"text-decoration: none; color: #15212A; font-size: 15px; line-height: 1.5em; font-weight: 600;\">\n                                        ${title}\n                                    </a>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <div class=\"kg-bookmark-description--outlook\">\n                                        <a href=\"${url}\" style=\"text-decoration: none; margin-top: 12px; color: #738a94; font-size: 13px; line-height: 1.5em; font-weight: 400;\">\n                                            ${description}\n                                        </a>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class=\"kg-bookmark-metadata--outlook\" style=\"padding-top: 14px; color: #15212A; font-size: 13px; font-weight: 400; line-height: 1.5em;\">\n                                    <table style=\"margin: 0; padding: 0; border-collapse: collapse; border-spacing: 0;\">\n                                        <tr>\n                                            ${icon ? `\n                                                <td valign=\"middle\" class=\"kg-bookmark-icon--outlook\" style=\"padding-right: 8px; font-size: 0; line-height: 1.5em;\">\n                                                    <a href=\"${url}\" style=\"text-decoration: none; color: #15212A;\">\n                                                        <img src=\"${icon}\" width=\"22\" height=\"22\" alt=\" \">\n                                                    </a>\n                                                </td>\n                                            ` : ''}\n                                            <td valign=\"middle\" class=\"kg-bookmark-byline--outlook\">\n                                                <a href=\"${url}\" style=\"text-decoration: none; color: #15212A;\">\n                                                    ${publisher}\n                                                    ${author ? `&nbsp;&#x2022;&nbsp;` : ''}\n                                                    ${author}\n                                                </a>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n            </table>\n            <div class=\"kg-bookmark-spacer--outlook\" style=\"height: 1.5em;\">&nbsp;</div>\n        <![endif]-->`\n    );\n}\n\nfunction frontendTemplate(node, document) {\n    const card = document.createElement('figure');\n    const caption = node.getCaption();\n    let cardClass = 'kg-card kg-bookmark-card';\n    if (caption) {\n        cardClass += ' kg-card-hascaption';\n    }\n    card.setAttribute('class', cardClass);\n\n    const container = document.createElement('a');\n    container.setAttribute('class','kg-bookmark-container');\n    container.href = node.getUrl();\n    card.appendChild(container);\n\n    const content = document.createElement('div');\n    content.setAttribute('class','kg-bookmark-content');\n    container.appendChild(content);\n\n    const title = document.createElement('div');\n    title.setAttribute('class','kg-bookmark-title');\n    title.textContent = node.getTitle();\n    content.appendChild(title);\n\n    const description = document.createElement('div');\n    description.setAttribute('class','kg-bookmark-description');\n    description.textContent = node.getDescription();\n    content.appendChild(description);\n\n    const metadata = document.createElement('div');\n    metadata.setAttribute('class','kg-bookmark-metadata');\n    content.appendChild(metadata);\n\n    metadata.icon = node.getIcon();\n    if (metadata.icon) {\n        const icon = document.createElement('img');\n        icon.setAttribute('class','kg-bookmark-icon');\n        icon.src = metadata.icon;\n        icon.alt = '';\n        metadata.appendChild(icon);\n    }\n\n    metadata.author = node.getAuthor();\n    if (metadata.author) {\n        const author = document.createElement('span');\n        author.setAttribute('class','kg-bookmark-author');\n        author.textContent = metadata.author;\n        metadata.appendChild(author);\n    }\n\n    metadata.publisher = node.getPublisher();\n    if (metadata.publisher) {\n        const publisher = document.createElement('span');\n        publisher.setAttribute('class','kg-bookmark-publisher');\n        publisher.textContent = metadata.publisher;\n        metadata.appendChild(publisher);\n    }\n\n    metadata.thumbnail = node.getThumbnail();\n    if (metadata.thumbnail) {\n        const thumbnailDiv = document.createElement('div');\n        thumbnailDiv.setAttribute('class','kg-bookmark-thumbnail');\n        container.appendChild(thumbnailDiv);\n\n        const thumbnail = document.createElement('img');\n        thumbnail.src = metadata.thumbnail;\n        thumbnail.alt = '';\n        thumbnailDiv.appendChild(thumbnail);\n    }\n\n    if (caption) {\n        const figCaption = document.createElement('figcaption');\n        figCaption.textContent = caption;\n        card.appendChild(figCaption);\n    }\n\n    return card;\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {BookmarkParser} from './BookmarkParser';\nimport {renderBookmarkNodeToDOM} from './BookmarkRenderer';\n\nexport const INSERT_BOOKMARK_COMMAND = createCommand();\n\nexport class BookmarkNode extends KoenigDecoratorNode {\n    // payload properties\n    __url;\n    __icon;\n    __title;\n    __description;\n    __author;\n    __publisher;\n    __thumbnail;\n    __caption;\n\n    static getType() {\n        return 'bookmark';\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            url: 'url',\n            icon: 'url',\n            thumbnail: 'url'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            url: self.__url,\n            icon: self.__icon,\n            title: self.__title,\n            description: self.__description,\n            author: self.__author,\n            publisher: self.__publisher,\n            thumbnail: self.__thumbnail,\n            caption: self.__caption\n        \n        };\n    }\n\n    constructor({url, icon, title, description, author, publisher, thumbnail, caption} = {}, key) {\n        super(key);\n        this.__url = url || '';\n        this.__icon = icon || '';\n        this.__title = title || '';\n        this.__description = description || '';\n        this.__author = author || '';\n        this.__publisher = publisher || '';\n        this.__thumbnail = thumbnail || '';\n        this.__caption = caption || '';\n    }\n\n    static importJSON(serializedNode) {\n        const {url, icon, title, description, author, publisher, thumbnail, caption} = serializedNode;\n        const node = new this({\n            url,\n            icon,\n            title,\n            description,\n            author,\n            publisher, \n            thumbnail,\n            caption\n        });\n        return node;\n    }\n\n    exportJSON() {\n        const dataset = {\n            type: 'bookmark',\n            version: 1,\n            url: this.getUrl(),\n            icon: this.getIcon(),\n            title: this.getTitle(),\n            description: this.getDescription(),\n            author: this.getAuthor(),\n            publisher: this.getPublisher(),\n            thumbnail: this.getThumbnail(),\n            caption: this.getCaption()\n        };\n        return dataset;\n    }\n\n    // parser used when pasting html >> node\n    static importDOM() {\n        const parser = new BookmarkParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    // renderer used when copying node >> html\n    exportDOM(options = {}) {\n        const element = renderBookmarkNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getUrl() {\n        const self = this.getLatest();\n        return self.__url;\n    }\n\n    setUrl(url) {\n        const writable = this.getWritable();\n        return writable.__url = url;\n    }\n\n    getIcon() {\n        const self = this.getLatest();\n        return self.__icon;\n    }\n\n    setIcon(icon) {\n        const writable = this.getWritable();\n        return writable.__icon = icon;\n    }\n\n    getTitle() {\n        const self = this.getLatest();\n        return self.__title;\n    }\n\n    setTitle(title) {\n        const writable = this.getWritable();\n        return writable.__title = title;\n    }\n    \n    getDescription() {\n        const self = this.getLatest();\n        return self.__description;\n    }\n\n    setDescription(description) {\n        const writable = this.getWritable();\n        return writable.__description = description;\n    }\n\n    getAuthor() {\n        const self = this.getLatest();\n        return self.__author;\n    }\n\n    setAuthor(author) {\n        const writable = this.getWritable();\n        return writable.__author = author;\n    }\n\n    getPublisher() {\n        const self = this.getLatest();\n        return self.__publisher;\n    }\n\n    setPublisher(publisher) {\n        const writable = this.getWritable();\n        return writable.__publisher = publisher;\n    }\n\n    getThumbnail() {\n        const self = this.getLatest();\n        return self.__thumbnail;\n    }\n\n    setThumbnail(thumbnail) {\n        const writable = this.getWritable();\n        return writable.__thumbnail = thumbnail;\n    }\n\n    getCaption() {\n        const self = this.getLatest();\n        return self.__caption;\n    }\n\n    setCaption(caption) {\n        const writable = this.getWritable();\n        return writable.__caption = caption;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__url;\n    }\n}\n\nexport const $createBookmarkNode = (dataset) => {\n    return new BookmarkNode(dataset);\n};\n\nexport function $isBookmarkNode(node) {\n    return node instanceof BookmarkNode;\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nexport function renderFileNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n  \n    const document = options.createDocument();\n  \n    if (!node.getSrc() || node.getSrc().trim() === '') {\n        return document.createTextNode('');\n    }\n  \n    const card = document.createElement('div');\n    card.setAttribute('class', 'kg-card kg-file-card');\n  \n    const container = document.createElement('a');\n    container.setAttribute('class', 'kg-file-card-container');\n    container.setAttribute('href', node.getSrc());\n    container.setAttribute('title', 'Download');\n    container.setAttribute('download', '');\n  \n    const contents = document.createElement('div');\n    contents.setAttribute('class', 'kg-file-card-contents');\n  \n    const title = document.createElement('div');\n    title.setAttribute('class', 'kg-file-card-title');\n    title.textContent = node.getTitle() || '';\n  \n    const caption = document.createElement('div');\n    caption.setAttribute('class', 'kg-file-card-caption');\n    caption.textContent = node.getDescription() || '';\n  \n    const metadata = document.createElement('div');\n    metadata.setAttribute('class', 'kg-file-card-metadata');\n  \n    const filename = document.createElement('div');\n    filename.setAttribute('class', 'kg-file-card-filename');\n    filename.textContent = node.getFileName() || '';\n  \n    const filesize = document.createElement('div');\n    filesize.setAttribute('class', 'kg-file-card-filesize');\n    filesize.textContent = node.getFileSize() || '';\n  \n    metadata.appendChild(filename);\n    metadata.appendChild(filesize);\n  \n    contents.appendChild(title);\n    contents.appendChild(caption);\n    contents.appendChild(metadata);\n  \n    container.appendChild(contents);\n  \n    const icon = document.createElement('div');\n    icon.setAttribute('class', 'kg-file-card-icon');\n  \n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('viewBox', '0 0 24 24');\n  \n    const defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n  \n    const style = document.createElementNS('http://www.w3.org/2000/svg', 'style');\n    style.textContent = '.a{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px;}';\n  \n    defs.appendChild(style);\n  \n    const titleElement = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n    titleElement.textContent = 'download-circle';\n  \n    const polyline = document.createElementNS('http://www.w3.org/2000/svg', 'polyline');\n    polyline.setAttribute('class', 'a');\n    polyline.setAttribute('points', '8.25 14.25 12 18 15.75 14.25');\n  \n    const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n    line.setAttribute('class', 'a');\n    line.setAttribute('x1', '12');\n    line.setAttribute('y1', '6.75');\n    line.setAttribute('x2', '12');\n    line.setAttribute('y2', '18');\n  \n    const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    circle.setAttribute('class', 'a');\n    circle.setAttribute('cx', '12');\n    circle.setAttribute('cy', '12');\n    circle.setAttribute('r', '11.25');\n  \n    svg.appendChild(defs);\n    svg.appendChild(titleElement);\n    svg.appendChild(polyline);\n    svg.appendChild(line);\n    svg.appendChild(circle);\n  \n    icon.appendChild(svg);\n  \n    container.appendChild(icon);\n  \n    card.appendChild(container);\n  \n    return card;\n}\n","export class FileParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            div: (nodeElem) => {\n                const isKgFileCard = nodeElem.classList?.contains('kg-file-card');\n                if (nodeElem.tagName === 'DIV' && isKgFileCard) {\n                    return {\n                        conversion(domNode) {\n                            const link = domNode.querySelector('a');\n                            const src = link.getAttribute('href');\n                            const title = domNode.querySelector('.kg-file-card-title')?.textContent || '';\n                            const description = domNode.querySelector('.kg-file-card-caption')?.textContent || '';\n                            const fileName = domNode.querySelector('.kg-file-card-filename')?.textContent || '';\n                            let fileSize = domNode.querySelector('.kg-file-card-filesize')?.textContent || '';\n                            const payload = {\n                                src,\n                                title,\n                                description,\n                                fileName,\n                                fileSize\n                            };\n\n                            const node = new self.NodeClass(payload);\n                            return {node};\n                        },\n                        priority: 1\n                    };\n                }\n                return null;\n            }\n        };\n    }\n}\n","import {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {renderFileNodeToDOM} from './FileRenderer';\nimport {FileParser} from './FileParser';\nimport {createCommand} from 'lexical';\n\nexport const INSERT_FILE_COMMAND = createCommand();\n\nexport function bytesToSize(bytes) {\n    if (!bytes) {\n        return '0 Byte';\n    }\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) {\n        return '0 Byte';\n    }\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round((bytes / Math.pow(1024, i))) + ' ' + sizes[i];\n}\n\nexport class FileNode extends KoenigDecoratorNode {\n    // file payload properties\n    __src;\n    __title;\n    __description;\n    __fileName;\n    __fileSize;\n\n    static getType() {\n        return 'file';\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    static get urlTransformMap() {\n        return {\n            src: 'url'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            src: self.__src,\n            title: self.__title,\n            description: self.__description,\n            fileName: self.__fileName,\n            fileSize: self.__fileSize\n        };\n    }\n\n    constructor({src, title, description, fileName, fileSize} = {}, key) {\n        super(key);\n        this.__src = src || '';\n        this.__title = title || '';\n        this.__description = description || '';\n        this.__fileName = fileName || '';\n        this.__fileSize = fileSize || '';\n    }\n\n    static importJSON(serializedNode) {\n        const {src, title, description, fileName, fileSize} = serializedNode;\n        return new this({\n            src,\n            title,\n            description,\n            fileName,\n            fileSize\n        });\n    }\n\n    exportJSON() {\n        const src = this.getSrc();\n        const isBlob = src.startsWith('data:');\n        return {\n            type: this.getType(),\n            src: isBlob ? '<base64String>' : this.getSrc(),\n            title: this.__title,\n            description: this.__description,\n            fileName: this.__fileName,\n            fileSize: this.__fileSize\n        };\n    }\n\n    static importDOM() {\n        const parser = new FileParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderFileNodeToDOM(this, options);\n        return {element};\n    }\n\n    // c8 ignore start\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n\n    getSrc() {\n        const self = this.getLatest();\n        return self.__src;\n    }\n\n    setSrc(src) {\n        const writable = this.getWritable();\n        writable.__src = src;\n    }\n\n    getTitle() {\n        const self = this.getLatest();\n        return self.__title;\n    }\n\n    setTitle(title) {\n        const writable = this.getWritable();\n        writable.__title = title;\n    }\n\n    getDescription() {\n        const self = this.getLatest();\n        return self.__description;\n    }\n\n    setDescription(description) {\n        const writable = this.getWritable();\n        writable.__description = description;\n    }\n\n    getFileName() {\n        const self = this.getLatest();\n        return self.__fileName;\n    }\n\n    setFileName(fileName) {\n        const writable = this.getWritable();\n        writable.__fileName = fileName;\n    }\n\n    getFileSize() {\n        const self = this.getLatest();\n        return self.__fileSize;\n    }\n\n    setFileSize(fileSize) {\n        const writable = this.getWritable();\n        const size = bytesToSize(fileSize);\n        writable.__fileSize = size;\n    }\n\n    hasEditMode() {\n        return true;\n    }\n    // c8 ignore stop\n    decorate() {\n        return '';\n    }\n}\n\nexport function $isFileNode(node) {\n    return node instanceof FileNode;\n}\n\nexport const $createFileNode = (dataset) => {\n    return new FileNode(dataset);\n};\n\n","export class PaywallParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            '#comment': () => {\n                return {\n                    conversion(domNode) {\n                        const isCommentNode = domNode.nodeType === 8;\n                        if (isCommentNode && domNode.nodeValue.trim() === 'members-only') {\n                            const node = new self.NodeClass();\n                            return {node};\n                        }\n\n                        return null;\n                    },\n                    priority: 0\n                };\n            }\n        };\n    }\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nexport function renderPaywallNodeToDOM(_, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n    const div = document.createElement('div');\n\n    div.innerHTML = '<!--members-only-->';\n\n    return div;\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {PaywallParser} from './PaywallParser';\nimport {renderPaywallNodeToDOM} from './PaywallRenderer';\n\nexport const INSERT_PAYWALL_COMMAND = createCommand();\nconst NODE_TYPE = 'paywall';\n\nexport class PaywallNode extends KoenigDecoratorNode {\n    static getType() {\n        return NODE_TYPE;\n    }\n\n    static clone(node) {\n        return new this(\n            node.__key\n        );\n    }\n\n    static get urlTransformMap() {\n        return {};\n    }\n\n    constructor(key) {\n        super(key);\n    }\n\n    static importJSON() {\n        const node = new this();\n        return node;\n    }\n\n    exportJSON() {\n        const dataset = {\n            type: NODE_TYPE,\n            version: 1\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new PaywallParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderPaywallNodeToDOM(this, options);\n        return {element, type: 'inner'};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        return document.createElement('div');\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n}\n\nexport const $createPaywallNode = (dataset) => {\n    return new PaywallNode(dataset);\n};\n\nexport function $isPaywallNode(node) {\n    return node instanceof PaywallNode;\n}\n","import {readCaptionFromElement} from '../../utils/read-caption-from-element';\n\nexport class ProductParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            div: () => ({\n                conversion(domNode) {\n                    const isKgProductCard = domNode.classList?.contains('kg-product-card');\n                    if (domNode.tagName === 'DIV' && isKgProductCard) {\n                        const title = readCaptionFromElement(domNode, {selector: '.kg-product-card-title'});\n                        const description = readCaptionFromElement(domNode, {selector: '.kg-product-card-description'});\n\n                        const payload = {\n                            isButtonEnabled: false,\n                            isRatingEnabled: false,\n                            title: title,\n                            description: description\n                        };\n\n                        const img = domNode.querySelector('.kg-product-card-image');\n                        if (img && img.getAttribute('src')) {\n                            payload.imgSrc = img.getAttribute('src');\n\n                            if (img.getAttribute('width')) {\n                                payload.imgWidth = img.getAttribute('width');\n                            }\n\n                            if (img.getAttribute('height')) {\n                                payload.imgHeight = img.getAttribute('height');\n                            }\n                        }\n\n                        const stars = [...domNode.querySelectorAll('.kg-product-card-rating-active')].length;\n                        if (stars) {\n                            payload.isRatingEnabled = true;\n                            payload.starRating = stars;\n                        }\n\n                        const button = domNode.querySelector('a');\n\n                        if (button) {\n                            const buttonUrl = button.href;\n                            const buttonText = getButtonText(button);\n\n                            if (buttonUrl && buttonText) {\n                                payload.isButtonEnabled = true;\n                                payload.buttonText = buttonText;\n                                payload.buttonUrl = buttonUrl;\n                            }\n                        }\n\n                        if (!title && !description && !img && !button) {\n                            return null;\n                        }\n\n                        const node = new self.NodeClass(payload);\n                        return {node};\n                    }\n\n                    return null;\n                },\n                priority: 1\n            })\n        };\n    }\n}\n\nfunction getButtonText(node) {\n    let buttonText = node.textContent;\n    if (buttonText) {\n        buttonText = buttonText.replace(/\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n    }\n    return buttonText;\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\nexport function renderProductNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n\n    if (node.isEmpty()) {\n        return document.createTextNode('');\n    }\n\n    const templateData = {\n        ...node.getDataset(),\n        starIcon: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.729,1.2l3.346,6.629,6.44.638a.805.805,0,0,1,.5,1.374l-5.3,5.253,1.965,7.138a.813.813,0,0,1-1.151.935L12,19.934,5.48,23.163a.813.813,0,0,1-1.151-.935L6.294,15.09.99,9.837a.805.805,0,0,1,.5-1.374l6.44-.638L11.271,1.2A.819.819,0,0,1,12.729,1.2Z\"/></svg>`\n    };\n\n    const starActiveClasses = 'kg-product-card-rating-active';\n    for (let i = 1; i <= 5; i++) {\n        templateData['star' + i] = '';\n        if (node.getStarRating() >= i) {\n            templateData['star' + i] = starActiveClasses;\n        }\n    }\n\n    const htmlString = options.target === 'email'\n        ? emailCardTemplate({data: templateData})\n        : cardTemplate({data: templateData});\n\n    const element = document.createElement('div');\n    element.innerHTML = htmlString.trim();\n\n    return element.firstElementChild;\n}\n\nexport function cardTemplate({data}) {\n    return (\n        `\n        <div class=\"kg-card kg-product-card\">\n            <div class=\"kg-product-card-container\">\n                ${data.imgSrc ? `<img src=\"${data.imgSrc}\" ${data.imgWidth ? `width=\"${data.imgWidth}\"` : ''} ${data.imgHeight ? `height=\"${data.imgHeight}\"` : ''} class=\"kg-product-card-image\" loading=\"lazy\" />` : ''}\n                <div class=\"kg-product-card-title-container\">\n                    <h4 class=\"kg-product-card-title\">${data.title}</h4>\n                </div>\n                ${data.isRatingEnabled ? `\n                    <div class=\"kg-product-card-rating\">\n                        <span class=\"${data.star1} kg-product-card-rating-star\">${data.starIcon}</span>\n                        <span class=\"${data.star2} kg-product-card-rating-star\">${data.starIcon}</span>\n                        <span class=\"${data.star3} kg-product-card-rating-star\">${data.starIcon}</span>\n                        <span class=\"${data.star4} kg-product-card-rating-star\">${data.starIcon}</span>\n                        <span class=\"${data.star5} kg-product-card-rating-star\">${data.starIcon}</span>\n                    </div>\n                ` : ''}\n\n                <div class=\"kg-product-card-description\">${data.description}</div>\n                ${data.isButtonEnabled ? `\n                    <a href=\"${data.buttonUrl}\" class=\"kg-product-card-button kg-product-card-btn-accent\" target=\"_blank\" rel=\"noopener noreferrer\"><span>${data.buttonText}</span></a>\n                ` : ''}\n            </div>\n        </div>\n    `\n    );\n}\n\nexport function emailCardTemplate({data}) {\n    return (\n        `\n         <table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"width:100%; padding:20px; border:1px solid #E9E9E9; border-radius: 5px; margin: 0 0 1.5em; width: 100%;\">\n            ${data.imgSrc ? `\n                <tr>\n                    <td align=\"center\" style=\"padding-top:0; padding-bottom:0; margin-bottom:0; padding-bottom:0;\">\n                        <img src=\"${data.imgSrc}\" ${data.imgWidth ? `width=\"${data.imgWidth}\"` : ''} ${data.imgHeight ? `height=\"${data.imgHeight}\"` : ''} style=\"height: auto; border: none; padding-bottom: 16px;\" border=\"0\">\n                    </td>\n                </tr>\n            ` : ''}\n            <tr>\n                <td valign=\"top\">\n                    <h4 style=\"font-size: 22px !important; margin-top: 0 !important; margin-bottom: 0 !important; font-weight: 700;\">${data.title}</h4>\n                </td>\n            </tr>\n            ${data.isRatingEnabled ? `\n                <tr style=\"padding-top:0; padding-bottom:0; margin-bottom:0; padding-bottom:0;\">\n                    <td valign=\"top\">\n                        <img src=\"${`https://static.ghost.org/v4.0.0/images/star-rating-${data.starRating}.png`}\" style=\"border: none; width: 96px;\" border=\"0\">\n                    </td>\n                </tr>\n            ` : ''}\n            <tr>\n                <td style=\"padding-top:0; padding-bottom:0; margin-bottom:0; padding-bottom:0;\">\n                    <div style=\"padding-top: 8px; opacity: 0.7; font-size: 17px; line-height: 1.4; margin-bottom: -24px;\">${data.description}</div>\n                </td>\n            </tr>\n            ${data.isButtonEnabled ? `\n                <tr>\n                    <td style=\"padding-top:0; padding-bottom:0; margin-bottom:0; padding-bottom:0;\">\n                        <div class=\"btn btn-accent\" style=\"box-sizing: border-box;display: table;width: 100%;padding-top: 16px;\">\n                            <a href=\"${data.buttonUrl}\" style=\"overflow-wrap: anywhere;border: solid 1px;border-radius: 5px;box-sizing: border-box;cursor: pointer;display: inline-block;font-size: 14px;font-weight: bold;margin: 0;padding: 12px 25px;text-decoration: none;color: #FFFFFF; width: 100%; text-align: center;\">${data.buttonText}</a>\n                        </div>\n                    </td>\n                </tr>\n            ` : ''}\n        </table>\n        `\n    );\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {ProductParser} from './ProductParser';\nimport {renderProductNodeToDOM} from './ProductRenderer';\n\nexport const INSERT_PRODUCT_COMMAND = createCommand();\nconst NODE_TYPE = 'product';\n\nexport class ProductNode extends KoenigDecoratorNode {\n    // payload properties\n    __imgSrc;\n    __imgWidth;\n    __imgHeight;\n    __title;\n    __description;\n    __isRatingEnabled;\n    __starRating;\n    __isButtonEnabled;\n    __buttonText;\n    __buttonUrl;\n\n    static getType() {\n        return NODE_TYPE;\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            imgSrc: 'url',\n            title: 'html',\n            description: 'html'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            imgSrc: self.__imgSrc,\n            imgWidth: self.__imgWidth,\n            imgHeight: self.__imgHeight,\n            title: self.__title,\n            description: self.__description,\n            isRatingEnabled: self.__isRatingEnabled,\n            starRating: self.__starRating,\n            isButtonEnabled: self.__isButtonEnabled,\n            buttonText: self.__buttonText,\n            buttonUrl: self.__buttonUrl\n        };\n    }\n\n    constructor({imgSrc, imgWidth, imgHeight, title, description, isRatingEnabled, starRating, isButtonEnabled, buttonText, buttonUrl} = {}, key) {\n        super(key);\n        this.__imgSrc = imgSrc || '';\n        this.__imgWidth = imgWidth || null;\n        this.__imgHeight = imgHeight || null;\n        this.__title = title || '';\n        this.__description = description || '';\n        this.__isRatingEnabled = !!isRatingEnabled;\n        this.__starRating = starRating || 5;\n        this.__isButtonEnabled = !!isButtonEnabled;\n        this.__buttonText = buttonText || '';\n        this.__buttonUrl = buttonUrl || '';\n    }\n\n    static importJSON(serializedNode) {\n        const {imgSrc, imgWidth, imgHeight, title, description, isRatingEnabled, starRating, isButtonEnabled, buttonText, buttonUrl} = serializedNode;\n        const node = new this({\n            imgSrc,\n            imgWidth,\n            imgHeight,\n            title,\n            description,\n            isRatingEnabled,\n            starRating,\n            isButtonEnabled,\n            buttonText,\n            buttonUrl\n        });\n        return node;\n    }\n\n    exportJSON() {\n        // checks if src is a data string\n        const src = this.getImgSrc();\n        const isBlob = src.startsWith('data:');\n        const dataset = {\n            type: NODE_TYPE,\n            version: 1,\n            imgSrc: isBlob ? '<base64String>' : this.getImgSrc(),\n            imgWidth: this.getImgWidth(),\n            imgHeight: this.getImgHeight(),\n            title: this.getTitle(),\n            description: this.getDescription(),\n            isRatingEnabled: this.getIsRatingEnabled(),\n            starRating: this.getStarRating(),\n            isButtonEnabled: this.getIsButtonEnabled(),\n            buttonText: this.getButtonText(),\n            buttonUrl: this.getButtonUrl()\n\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new ProductParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderProductNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getImgSrc() {\n        const self = this.getLatest();\n        return self.__imgSrc;\n    }\n\n    setImgSrc(imgSrc) {\n        const writable = this.getWritable();\n        return writable.__imgSrc = imgSrc;\n    }\n\n    getImgWidth() {\n        const self = this.getLatest();\n        return self.__imgWidth;\n    }\n\n    setImgWidth(imgWidth) {\n        const writable = this.getWritable();\n        return writable.__imgWidth = imgWidth;\n    }\n\n    getImgHeight() {\n        const self = this.getLatest();\n        return self.__imgHeight;\n    }\n\n    setImgHeight(imgHeight) {\n        const writable = this.getWritable();\n        return writable.__imgHeight = imgHeight;\n    }\n\n    getTitle() {\n        const self = this.getLatest();\n        return self.__title;\n    }\n\n    setTitle(title) {\n        const writable = this.getWritable();\n        return writable.__title = title;\n    }\n\n    getDescription() {\n        const self = this.getLatest();\n        return self.__description;\n    }\n\n    setDescription(description) {\n        const writable = this.getWritable();\n        return writable.__description = description;\n    }\n\n    getIsRatingEnabled() {\n        const self = this.getLatest();\n        return self.__isRatingEnabled;\n    }\n\n    setIsRatingEnabled(isRatingEnabled) {\n        const writable = this.getWritable();\n        return writable.__isRatingEnabled = isRatingEnabled;\n    }\n\n    getStarRating() {\n        const self = this.getLatest();\n        return self.__starRating;\n    }\n\n    setStarRating(starRating) {\n        const writable = this.getWritable();\n        return writable.__starRating = starRating;\n    }\n\n    getIsButtonEnabled() {\n        const self = this.getLatest();\n        return self.__isButtonEnabled;\n    }\n\n    setIsButtonEnabled(isButtonEnabled) {\n        const writable = this.getWritable();\n        return writable.__isButtonEnabled = isButtonEnabled;\n    }\n\n    getButtonText() {\n        const self = this.getLatest();\n        return self.__buttonText;\n    }\n\n    setButtonText(buttonText) {\n        const writable = this.getWritable();\n        return writable.__buttonText = buttonText;\n    }\n\n    getButtonUrl() {\n        const self = this.getLatest();\n        return self.__buttonUrl;\n    }\n\n    setButtonUrl(buttonUrl) {\n        const writable = this.getWritable();\n        return writable.__buttonUrl = buttonUrl;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        const isButtonFilled = this.__isButtonEnabled && this.__buttonUrl && this.__buttonText;\n        return !this.__title && !this.__description && !isButtonFilled && !this.__imgSrc && !this.__isRatingEnabled;\n    }\n}\n\nexport const $createProductNode = (dataset) => {\n    return new ProductNode(dataset);\n};\n\nexport function $isProductNode(node) {\n    return node instanceof ProductNode;\n}\n","export class EmbedParser {\n    constructor(NodeClass) {\n        this.NodeClass = NodeClass;\n    }\n\n    get DOMConversionMap() {\n        // const self = this;\n\n        return {\n            // figure: (nodeElem) => {\n            //     const isKgEmbedCard = nodeElem.classList?.contains('kg-embed-card');\n            //     if (nodeElem.tagName === 'FIGURE' && isKgEmbedCard) {\n            //         return {\n            //             conversion(domNode) {\n            //                 const url = domNode?.querySelector('.kg-embed-container').href;\n            //                 const icon = domNode?.querySelector('.kg-embed-icon').src;\n            //                 const title = domNode?.querySelector('.kg-embed-title').textContent;\n            //                 const description = domNode?.querySelector('.kg-embed-description').textContent;\n            //                 const author = domNode?.querySelector('.kg-embed-author').textContent;\n            //                 const publisher = domNode?.querySelector('.kg-embed-publisher').textContent;\n            //                 const thumbnail = domNode?.querySelector('.kg-embed-thumbnail img').src;\n            //                 const caption = domNode?.querySelector('figure.kg-embed-card figcaption').textContent;\n            //                 const payload = {\n            //                     url: url,\n            //                     icon: icon,\n            //                     title: title,\n            //                     description: description,\n            //                     author: author,\n            //                     publisher: publisher,\n            //                     thumbnail: thumbnail,\n            //                     caption: caption\n            //                 };\n            //                 const node = new self.NodeClass(payload);\n            //                 return {node};\n            //             },\n            //             priority: 1\n            //         };\n            //     }\n            //     return null;\n            // }\n        };\n    }\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\n// const nftCard = require('./types/nft');\n// const twitterCard = require('./types/twitter');\n\nexport function renderEmbedNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n\n    const document = options.createDocument();\n    const embedType = node.getEmbedType();\n    // const metadata = node.getMetadata();\n\n    if (!node.getHtml() && embedType !== 'nft') {\n        return document.createTextNode('');\n    }\n\n    // if (embedType === 'twitter') {\n    //     return twitterCard.render(node, document, options);\n    // }\n\n    // if (metadata && embedType === 'nft') {\n    //     return nftCard.render(node, document, options);\n    // }\n\n    return renderTemplate(node, document, options);\n}\n\nfunction renderTemplate(node, document, options) {\n    const isEmail = options.target === 'email';\n    const metadata = node.getMetadata();\n    const url = node.getUrl();\n    const isVideoWithThumbnail = node.getType() === 'video' && metadata && metadata.thumbnail_url;\n\n    const figure = document.createElement('figure');\n    figure.setAttribute('class', 'kg-card kg-embed-card');\n    const container = document.createElement('div');\n\n    if (isEmail && isVideoWithThumbnail) {\n        const emailTemplateMaxWidth = 600;\n        const thumbnailAspectRatio = metadata.thumbnail_width / metadata.thumbnail_height;\n        const spacerWidth = Math.round(emailTemplateMaxWidth / 4);\n        const spacerHeight = Math.round(emailTemplateMaxWidth / thumbnailAspectRatio);\n        const html = `\n            <!--[if !mso !vml]-->\n            <a class=\"kg-video-preview\" href=\"${url}\" aria-label=\"Play video\" style=\"mso-hide: all\">\n                <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" background=\"${metadata.thumbnail_url}\" role=\"presentation\" style=\"background: url('${metadata.thumbnail_url}') left top / cover; mso-hide: all\">\n                    <tr style=\"mso-hide: all\">\n                        <td width=\"25%\" style=\"visibility: hidden; mso-hide: all\">\n                            <img src=\"https://img.spacergif.org/v1/${spacerWidth}x${spacerHeight}/0a/spacer.png\" alt=\"\" width=\"100%\" border=\"0\" style=\"height: auto; opacity: 0; visibility: hidden; mso-hide: all;\">\n                        </td>\n                        <td width=\"50%\" align=\"center\" valign=\"middle\" style=\"vertical-align: middle; mso-hide: all;\">\n                            <div class=\"kg-video-play-button\" style=\"mso-hide: all\"><div style=\"mso-hide: all\"></div></div>\n                        </td>\n                        <td width=\"25%\" style=\"mso-hide: all\">&nbsp;</td>\n                    </tr>\n                </table>\n            </a>\n            <!--[endif]-->\n\n            <!--[if vml]>\n            <v:group xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:w=\"urn:schemas-microsoft-com:office:word\" coordsize=\"${emailTemplateMaxWidth},${spacerHeight}\" coordorigin=\"0,0\" href=\"${url}\" style=\"width:${emailTemplateMaxWidth}px;height:${spacerHeight}px;\">\n                <v:rect fill=\"t\" stroked=\"f\" style=\"position:absolute;width:${emailTemplateMaxWidth};height:${spacerHeight};\"><v:fill src=\"${metadata.thumbnail_url}\" type=\"frame\"/></v:rect>\n                <v:oval fill=\"t\" strokecolor=\"white\" strokeweight=\"4px\" style=\"position:absolute;left:${Math.round((emailTemplateMaxWidth / 2) - 39)};top:${Math.round((spacerHeight / 2) - 39)};width:78;height:78\"><v:fill color=\"black\" opacity=\"30%\" /></v:oval>\n                <v:shape coordsize=\"24,32\" path=\"m,l,32,24,16,xe\" fillcolor=\"white\" stroked=\"f\" style=\"position:absolute;left:${Math.round((emailTemplateMaxWidth / 2) - 11)};top:${Math.round((spacerHeight / 2) - 17)};width:30;height:34;\" />\n            </v:group>\n            <![endif]-->\n        `;\n        container.innerHTML = html.trim();\n        figure.appendChild(container);\n    } else {\n        container.innerHTML = node.getHtml();\n        figure.appendChild(container);\n    }\n    \n    const caption = node.getCaption();\n    if (caption) {\n        const figcaption = document.createElement('figcaption');\n        figcaption.textContent = caption;\n        figure.appendChild(figcaption);\n        figure.setAttribute('class', `${figure.getAttribute('class')} kg-card-hascaption`);\n    }\n\n    return figure;\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {EmbedParser} from './EmbedParser';\nimport {renderEmbedNodeToDOM} from './EmbedRenderer';\n\nexport const INSERT_EMBED_COMMAND = createCommand();\n\nexport class EmbedNode extends KoenigDecoratorNode {\n    // payload properties\n    __url;\n    __embedType;\n    __html;\n    __metadata;\n    __caption;\n\n    static getType() {\n        return 'embed';\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            url: 'url'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            url: self.__url,\n            embedType: self.__embedType,\n            html: self.__html,\n            metadata: self.__metadata,\n            caption: self.__caption\n        };\n    }\n\n    constructor({url, embedType, html, metadata, caption} = {}, key) {\n        super(key);\n        this.__url = url || '';\n        this.__embedType = embedType || '';\n        this.__html = html || '';\n        this.__metadata = metadata || {};\n        this.__caption = caption || '';\n    }\n\n    static importJSON(serializedNode) {\n        const {url, embedType, html, metadata, caption} = serializedNode;\n        const node = new this({\n            url,\n            embedType,\n            html,\n            metadata,\n            caption\n        });\n        return node;\n    }\n\n    exportJSON() {\n        const dataset = {\n            type: 'embed',\n            version: 1,\n            url: this.getUrl(),\n            embedType: this.getEmbedType(),\n            html: this.getHtml(),\n            metadata: this.getMetadata(),\n            caption: this.getCaption()\n        };\n        return dataset;\n    }\n\n    // parser used when pasting html >> node\n    static importDOM() {\n        const parser = new EmbedParser(this);\n        return parser.DOMConversionMap;\n    }\n\n    // renderer used when copying node >> html\n    exportDOM(options = {}) {\n        const element = renderEmbedNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getUrl() {\n        const self = this.getLatest();\n        return self.__url;\n    }\n\n    setUrl(url) {\n        const writable = this.getWritable();\n        return writable.__url = url;\n    }\n\n    getEmbedType() {\n        const self = this.getLatest();\n        return self.__embedType;\n    }\n\n    setEmbedType(type) {\n        const writable = this.getWritable();\n        return writable.__embedType = type;\n    }\n\n    getHtml() {\n        const self = this.getLatest();\n        return self.__html;\n    }\n\n    setHtml(html) {\n        const writable = this.getWritable();\n        return writable.__html = html;\n    }\n\n    getMetadata() {\n        const self = this.getLatest();\n        return self.__metadata;\n    }\n\n    setMetadata(metadata) {\n        const writable = this.getWritable();\n        return writable.__metadata = metadata;\n    }\n\n    getCaption() {\n        const self = this.getLatest();\n        return self.__caption;\n    }\n\n    setCaption(caption) {\n        const writable = this.getWritable();\n        return writable.__caption = caption;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__url;\n    }\n}\n\nexport const $createEmbedNode = (dataset) => {\n    return new EmbedNode(dataset);\n};\n\nexport function $isEmbedNode(node) {\n    return node instanceof EmbedNode;\n}\n","import {addCreateDocumentOption} from '../../utils/add-create-document-option';\n\n/**\n * Removes consecutive whitespaces and newlines\n * @param {string} html\n * @returns {string}\n */\nfunction removeSpaces(html) {\n    return html.replace(/\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n}\n\n/**\n * Wraps replacement strings with %%\n * This helps to prevent conflicts between code samples and our replacement strings\n * Example: {foo} -> %%{foo}%%\n * @param {string} html\n * @returns {string}\n */\nfunction wrapReplacementStrings(html) {\n    return html.replace(/\\{(\\w*?)(?:,? *\"(.*?)\")?\\}/g, '%%$&%%');\n}\n\nexport function renderEmailNodeToDOM(node, options = {}) {\n    addCreateDocumentOption(options);\n    const document = options.createDocument();\n\n    const html = node.getHtml();\n\n    if (!html || options.target !== 'email') {\n        return document.createTextNode('');\n    }\n\n    const cleanedHtml = wrapReplacementStrings(removeSpaces(html));\n    const div = document.createElement('div');\n    div.innerHTML = cleanedHtml;\n\n    return div;\n}","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {renderEmailNodeToDOM} from './EmailRenderer';\n\nexport const INSERT_EMAIL_COMMAND = createCommand();\nconst NODE_TYPE = 'email';\n\nexport class EmailNode extends KoenigDecoratorNode {\n    // payload properties\n    __html;\n\n    static getType() {\n        return NODE_TYPE;\n    }\n\n    static clone(node) {\n        return new this(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    static get urlTransformMap() {\n        return {\n            html: 'html'\n        };\n    }\n\n    getDataset() {\n        const self = this.getLatest();\n        return {\n            html: self.__html\n        };\n    }\n\n    constructor({html} = {}, key) {\n        super(key);\n        this.__html = html || '';\n    }\n\n    static importJSON(serializedNode) {\n        const {html} = serializedNode;\n        return new this({\n            html\n        });\n    }\n\n    exportJSON() {\n        const dataset = {\n            type: NODE_TYPE,\n            version: 1,\n            html: this.getHtml()\n        };\n        return dataset;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderEmailNodeToDOM(this, options);\n        return {element, type: 'inner'};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        return document.createElement('div');\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getHtml() {\n        const self = this.getLatest();\n        return self.__html;\n    }\n\n    setHtml(html) {\n        const writable = this.getWritable();\n        return writable.__html = html;\n    }\n\n    hasEditMode() {\n        return true;\n    }\n\n    isEmpty() {\n        return !this.__html;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n}\n\nexport const $createEmailNode = (dataset) => {\n    return new EmailNode(dataset);\n};\n\nexport function $isEmailNode(node) {\n    return node instanceof EmailNode;\n}\n","import * as image from './nodes/image/ImageNode';\nimport * as codeblock from './nodes/codeblock/CodeBlockNode';\nimport * as markdown from './nodes/markdown/MarkdownNode';\nimport * as video from './nodes/video/VideoNode';\nimport * as audio from './nodes/audio/AudioNode';\nimport * as callout from './nodes/callout/CalloutNode';\nimport * as aside from './nodes/aside/AsideNode';\nimport * as horizontalrule from './nodes/horizontalrule/HorizontalRuleNode';\nimport * as html from './nodes/html/HtmlNode';\nimport * as toggle from './nodes/toggle/ToggleNode';\nimport * as button from './nodes/button/ButtonNode';\nimport * as bookmark from './nodes/bookmark/BookmarkNode';\nimport * as file from './nodes/file/FileNode';\nimport * as paywall from './nodes/paywall/PaywallNode';\nimport * as product from './nodes/product/ProductNode';\nimport * as embed from './nodes/embed/EmbedNode';\nimport * as email from './nodes/email/EmailNode';\n\n// re-export everything for easier importing\nexport * from './KoenigDecoratorNode';\nexport * from './nodes/image/ImageNode';\nexport * from './nodes/image/ImageParser';\nexport * from './nodes/codeblock/CodeBlockNode';\nexport * from './nodes/markdown/MarkdownNode';\nexport * from './nodes/video/VideoNode';\nexport * from './nodes/audio/AudioNode';\nexport * from './nodes/callout/CalloutNode';\nexport * from './nodes/aside/AsideNode';\nexport * from './nodes/horizontalrule/HorizontalRuleNode';\nexport * from './nodes/html/HtmlNode';\nexport * from './nodes/toggle/ToggleNode';\nexport * from './nodes/button/ButtonNode';\nexport * from './nodes/bookmark/BookmarkNode';\nexport * from './nodes/file/FileNode';\nexport * from './nodes/paywall/PaywallNode';\nexport * from './nodes/product/ProductNode';\nexport * from './nodes/embed/EmbedNode';\nexport * from './nodes/email/EmailNode';\n\n// export convenience objects for use elsewhere\nexport const DEFAULT_NODES = [\n    codeblock.CodeBlockNode,\n    image.ImageNode,\n    markdown.MarkdownNode,\n    video.VideoNode,\n    audio.AudioNode,\n    callout.CalloutNode,\n    aside.AsideNode,\n    horizontalrule.HorizontalRuleNode,\n    html.HtmlNode,\n    file.FileNode,\n    toggle.ToggleNode,\n    button.ButtonNode,\n    bookmark.BookmarkNode,\n    paywall.PaywallNode,\n    product.ProductNode,\n    embed.EmbedNode,\n    email.EmailNode\n];\n"],"names":["KoenigDecoratorNode","DecoratorNode","$isKoenigCard","node","buildCleanBasicHtmlForElement","domNode","_cleanBasicHtml","html","cleanedHtml","cleanBasicHtml","createDocument","_html","newDoc","ownerDocument","implementation","createHTMLDocument","body","innerHTML","readCaptionFromElement","element","selector","arguments","length","undefined","caption","figcaptions","Array","from","querySelectorAll","forEach","figcaption","cleanHtml","readImageAttributesFromElement","attrs","src","width","dataset","parseInt","height","getAttribute","exec","alt","title","parentNode","tagName","href","ImageParser","constructor","NodeClass","DOMConversionMap","self","img","conversion","altText","priority","figure","nodeElem","querySelector","kgClass","className","match","grafClass","payload","cardWidth","getAvailableImageWidths","image","imageSizes","imageWidths","Object","values","map","_ref","sort","a","b","availableImageWidths","filter","push","isLocalContentImage","url","siteUrl","normalizedSiteUrl","replace","imagePath","test","isUnsplashImage","getSrcsetAttribute","options","imageOptimization","srcsets","contentImageSizes","canTransformImage","srcsetWidths","imagesPath","filename","srcs","srcsetWidth","join","unsplashUrl","URL","searchParams","set","setSrcsetAttribute","elem","includes","srcset","setAttribute","resizeImage","desiredWidth","desiredHeight","ratio","resizedHeight","Math","round","resizedWidth","addCreateDocumentOption","document","window","Error","renderImageNodeToDOM","getSrc","trim","createTextNode","createElement","figureClasses","getCardWidth","getAltText","getTitle","getImgWidth","getImgHeight","defaultMaxWidth","imageDimensions","target","imgAttributes","srcWidth","find","getHref","appendChild","getCaption","INSERT_IMAGE_COMMAND","createCommand","UPLOAD_IMAGE_COMMAND","ImageNode","__src","__caption","__title","__altText","__cardWidth","__width","__height","__href","getType","clone","getDataset","__key","urlTransformMap","getLatest","key","importJSON","serializedNode","exportJSON","isBlob","startsWith","type","version","importDOM","parser","exportDOM","createDOM","updateDOM","isInline","setSrc","writable","getWritable","setTitle","setHref","setCardWidth","setImgWidth","setImgHeight","setCaption","setAltText","decorate","$createImageNode","$isImageNode","CodeBlockParser","pre","code","textContent","preClass","codeClass","langRegex","languageMatches","language","toLowerCase","codeElement","children","renderCodeBlockNodeToDOM","getCode","getLanguage","INSERT_CODE_BLOCK_COMMAND","CodeBlockNode","__code","__language","setCode","setLanguage","getTextContent","hasEditMode","isEmpty","$createCodeBlockNode","$isCodeBlockNode","renderMarkdownNodeToDOM","markdownHtmlRenderer","render","getMarkdown","div","INSERT_MARKDOWN_COMMAND","MarkdownNode","__markdown","markdown","setMarkdown","$createMarkdownNode","$isMarkdownNode","VideoParser","isKgVideoCard","classList","contains","videoNode","durationNode","videoSrc","videoWidth","videoHeight","durationText","captionText","loop","minutes","seconds","split","duration","e","kgThumbnail","thumbnailSrc","kgCustomThumbnail","customThumbnailSrc","renderVideoNodeToDOM","cardClasses","getCardClasses","htmlString","emailCardTemplate","cardTemplate","firstElementChild","getVideoWidth","getVideoHeight","posterSpacerSrc","autoplayAttr","getLoop","getCustomThumbnailSrc","getThumbnailSrc","hideControlsClass","getFormattedDuration","_ref2","emailTemplateMaxWidth","aspectRatio","emailSpacerWidth","emailSpacerHeight","outlookCircleLeft","outlookCircleTop","outlookPlayLeft","outlookPlayTop","postUrl","INSERT_VIDEO_COMMAND","NODE_TYPE","VideoNode","__duration","__thumbnailSrc","__customThumbnailSrc","__loop","getDuration","setVideoWidth","setVideoHeight","floor","paddedSeconds","String","padStart","formattedDuration","setDuration","setThumbnailSrc","setCustomThumbnailSrc","setLoop","$createVideoNode","$isVideoNode","AudioParser","isKgAudioCard","titleNode","audioNode","thumbnailNode","audioSrc","renderAudioNodeToDOM","frontendTemplate","thumbnailCls","emptyThumbnailCls","cardDiv","emptyThumbnailDiv","svg","createElementNS","path1","path2","path3","audioPlayerContainer","audioElement","audioTitle","audioPlayer","audioPlayIcon","audioPlayIconSvg","playPath","audioPauseIcon","audioPauseIconSvg","rectSvg","rectSvg2","audioDuration","audioDurationTotal","audioDUrationNode","audioSlider","playbackRate","unmuteIcon","unmuteIconSvg","unmutePath","muteIcon","muteIconSvg","mutePath","volumeSlider","INSERT_AUDIO_COMMAND","AudioNode","__mimeType","mimeType","getMimeType","setMimeType","$createAudioNode","$isAudioNode","renderCalloutNodeToDOM","add","getBackgroundColor","getHasEmoji","emojiElement","getEmojiValue","textElement","getText","getColorTag","colorClass","value","CalloutParser","isKgCalloutCard","textNode","emojiNode","color","text","hasEmoji","emojiValue","backgroundColor","INSERT_CALLOUT_COMMAND","CalloutNode","__text","__hasEmoji","__emojiValue","__backgroundColor","createDom","updateDom","setText","writeable","setBackgroundColor","setHasEmoji","setEmojiValue","$isCalloutNode","$createCalloutNode","AsideParser","aside","renderAsideToDOM","_","AsideNode","ElementNode","setFormat","format","setIndent","indent","setDirection","direction","$createAsideNode","$isAsideNode","renderHorizontalRuleToDOM","hr","HorizontalRuleParser","INSERT_HORIZONTAL_RULE_COMMAND","HorizontalRuleNode","$createHorizontalRuleNode","$isHorizontalRuleNode","renderHtmlNodeToDOM","getHtml","HtmlParser","#comment","isCommentNode","nodeType","nodeValue","nextNode","nextSibling","isHtmlEndComment","currentNode","outerHTML","remove","INSERT_HTML_COMMAND","HtmlNode","__html","setHtml","$createHtmlNode","$isHtmlNode","ToggleParser","isKgToggleCard","headerNode","header","contentNode","content","getContent","getHeader","renderToggleNodeToDOM","INSERT_TOGGLE_COMMAND","ToggleNode","__content","__header","setContent","setHeader","$createToggleNode","$isToggleNode","ButtonParser","isButtonCard","alignmentClass","alignment","buttonNode","buttonUrl","buttonText","renderButtonNodeToDOM","getButtonUrl","emailTemplate","button","getButtonText","parent","buttonDiv","table","getAlignment","row","cell","INSERT_BUTTON_COMMAND","ButtonNode","__buttonText","__alignment","__buttonUrl","setButtonText","setAlignment","setButtonUrl","$createButtonNode","$isButtonNode","BookmarkParser","isKgBookmarkCard","icon","description","author","publisher","thumbnail","renderBookmarkNodeToDOM","getUrl","getPublisher","getAuthor","getIcon","getDescription","card","cardClass","container","metadata","getThumbnail","thumbnailDiv","figCaption","INSERT_BOOKMARK_COMMAND","BookmarkNode","__url","__icon","__description","__author","__publisher","__thumbnail","setUrl","setIcon","setDescription","setAuthor","setPublisher","setThumbnail","$createBookmarkNode","$isBookmarkNode","renderFileNodeToDOM","contents","getFileName","filesize","getFileSize","defs","style","titleElement","polyline","line","circle","FileParser","isKgFileCard","link","fileName","fileSize","INSERT_FILE_COMMAND","bytesToSize","bytes","sizes","i","log","pow","FileNode","__fileName","__fileSize","setFileName","setFileSize","size","$isFileNode","$createFileNode","PaywallParser","renderPaywallNodeToDOM","INSERT_PAYWALL_COMMAND","PaywallNode","$createPaywallNode","$isPaywallNode","ProductParser","isKgProductCard","isButtonEnabled","isRatingEnabled","imgSrc","imgWidth","imgHeight","stars","starRating","renderProductNodeToDOM","templateData","starIcon","starActiveClasses","getStarRating","data","star1","star2","star3","star4","star5","INSERT_PRODUCT_COMMAND","ProductNode","__imgSrc","__imgWidth","__imgHeight","__isRatingEnabled","__starRating","__isButtonEnabled","getImgSrc","getIsRatingEnabled","getIsButtonEnabled","setImgSrc","setIsRatingEnabled","setStarRating","setIsButtonEnabled","isButtonFilled","$createProductNode","$isProductNode","EmbedParser","renderEmbedNodeToDOM","embedType","getEmbedType","renderTemplate","isEmail","getMetadata","isVideoWithThumbnail","thumbnail_url","thumbnailAspectRatio","thumbnail_width","thumbnail_height","spacerWidth","spacerHeight","INSERT_EMBED_COMMAND","EmbedNode","__embedType","__metadata","setEmbedType","setMetadata","$createEmbedNode","$isEmbedNode","removeSpaces","wrapReplacementStrings","renderEmailNodeToDOM","INSERT_EMAIL_COMMAND","EmailNode","$createEmailNode","$isEmailNode","DEFAULT_NODES","codeblock","video","audio","callout","horizontalrule","file","toggle","bookmark","paywall","product","embed","email"],"mappings":"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"}